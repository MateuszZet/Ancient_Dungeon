                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.6.0 #9615 (MINGW64)
                              4 ;--------------------------------------------------------
                              5 	.module StateEnd2
                              6 	.optsdcc -mgbz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _SpriteManagerAdd
                             12 	.globl _SpriteManagerLoad
                             13 	.globl _InitScrollColor
                             14 	.globl _ZInitScrollTilesColor
                             15 	.globl _SetState
                             16 	.globl _collilision_tiles4
                             17 	.globl _bank_STATE_END2
                             18 	.globl _Start_STATE_END2
                             19 	.globl _Update_STATE_END2
                             20 ;--------------------------------------------------------
                             21 ; ram data
                             22 ;--------------------------------------------------------
                             23 	.area _DATA
   0000                      24 _bank_STATE_END2::
   0000                      25 	.ds 1
   0001                      26 _collilision_tiles4::
   0001                      27 	.ds 5
                             28 ;--------------------------------------------------------
                             29 ; absolute external ram data
                             30 ;--------------------------------------------------------
                             31 	.area _DABS (ABS)
                             32 ;--------------------------------------------------------
                             33 ; global & static initialisations
                             34 ;--------------------------------------------------------
                             35 	.area _HOME
                             36 	.area _GSINIT
                             37 	.area _GSFINAL
                             38 	.area _GSINIT
                             39 ;StateEnd2.c:3: UINT8 bank_STATE_END2 = 2;
   0000 21r00r00             40 	ld	hl,#_bank_STATE_END2
   0003 36 02                41 	ld	(hl),#0x02
                             42 ;StateEnd2.c:13: UINT8 collilision_tiles4[] = { 1,2,3,4,0 };
   0005 21r01r00             43 	ld	hl,#_collilision_tiles4
   0008 36 01                44 	ld	(hl),#0x01
   000A 21r02r00             45 	ld	hl,#(_collilision_tiles4 + 0x0001)
   000D 36 02                46 	ld	(hl),#0x02
   000F 21r03r00             47 	ld	hl,#(_collilision_tiles4 + 0x0002)
   0012 36 03                48 	ld	(hl),#0x03
   0014 21r04r00             49 	ld	hl,#(_collilision_tiles4 + 0x0003)
   0017 36 04                50 	ld	(hl),#0x04
   0019 21r05r00             51 	ld	hl,#(_collilision_tiles4 + 0x0004)
   001C 36 00                52 	ld	(hl),#0x00
                             53 ;--------------------------------------------------------
                             54 ; Home
                             55 ;--------------------------------------------------------
                             56 	.area _HOME
                             57 	.area _HOME
                             58 ;--------------------------------------------------------
                             59 ; code
                             60 ;--------------------------------------------------------
                             61 	.area _CODE_2
                             62 ;StateEnd2.c:15: void Start_STATE_END2() {
                             63 ;	---------------------------------
                             64 ; Function Start_STATE_END2
                             65 ; ---------------------------------
   0000                      66 _Start_STATE_END2::
                             67 ;StateEnd2.c:17: next_lvl =1;
   0000 21r00r00             68 	ld	hl,#_next_lvl
   0003 36 01                69 	ld	(hl),#0x01
   0005 23                   70 	inc	hl
   0006 36 00                71 	ld	(hl),#0x00
                             72 ;StateEnd2.c:18: NR52_REG = 0x80; //Enables sound, you should always setup this first
   0008 21 26 FF             73 	ld	hl,#0xff26
   000B 36 80                74 	ld	(hl),#0x80
                             75 ;StateEnd2.c:19: NR51_REG = 0xFF; //Enables all channels (left and right)
   000D 2E 25                76 	ld	l, #0x25
   000F 36 FF                77 	ld	(hl),#0xff
                             78 ;StateEnd2.c:20: NR50_REG = 0x77; //Max volume
   0011 2E 24                79 	ld	l, #0x24
   0013 36 77                80 	ld	(hl),#0x77
                             81 ;StateEnd2.c:22: SPRITES_8x16;
   0015 11 40 FF             82 	ld	de,#0xff40
   0018 1A                   83 	ld	a,(de)
   0019 4F                   84 	ld	c,a
   001A 06 00                85 	ld	b,#0x00
   001C 79                   86 	ld	a,c
   001D CB D7                87 	set	2, a
   001F 4F                   88 	ld	c,a
   0020 2E 40                89 	ld	l, #0x40
   0022 71                   90 	ld	(hl),c
                             91 ;StateEnd2.c:23: for(i = 0; i != n_sprite_types; ++ i) {
   0023 06 00                92 	ld	b,#0x00
   0025                      93 00105$:
   0025 21r00r00             94 	ld	hl,#_n_sprite_types
   0028 7E                   95 	ld	a,(hl)
   0029 90                   96 	sub	a, b
   002A 28 0B                97 	jr	Z,00101$
                             98 ;StateEnd2.c:24: SpriteManagerLoad(i);
   002C C5                   99 	push	bc
   002D C5                  100 	push	bc
   002E 33                  101 	inc	sp
   002F CDr00r00            102 	call	_SpriteManagerLoad
   0032 33                  103 	inc	sp
   0033 C1                  104 	pop	bc
                            105 ;StateEnd2.c:23: for(i = 0; i != n_sprite_types; ++ i) {
   0034 04                  106 	inc	b
   0035 18 EE               107 	jr	00105$
   0037                     108 00101$:
                            109 ;StateEnd2.c:26: SHOW_SPRITES;
   0037 11 40 FF            110 	ld	de,#0xff40
   003A 1A                  111 	ld	a,(de)
   003B 4F                  112 	ld	c,a
   003C 06 00               113 	ld	b,#0x00
   003E 79                  114 	ld	a,c
   003F CB CF               115 	set	1, a
   0041 4F                  116 	ld	c,a
   0042 21 40 FF            117 	ld	hl,#0xff40
   0045 71                  118 	ld	(hl),c
                            119 ;StateEnd2.c:28: scroll_target = SpriteManagerAdd(SPRITE_PLAYER, 70, 35);
   0046 21 23 00            120 	ld	hl,#0x0023
   0049 E5                  121 	push	hl
   004A 2E 46               122 	ld	l, #0x46
   004C E5                  123 	push	hl
   004D AF                  124 	xor	a, a
   004E F5                  125 	push	af
   004F 33                  126 	inc	sp
   0050 CDr00r00            127 	call	_SpriteManagerAdd
   0053 E8 05               128 	add	sp, #5
   0055 21r00r00            129 	ld	hl,#_scroll_target
   0058 73                  130 	ld	(hl),e
   0059 23                  131 	inc	hl
   005A 72                  132 	ld	(hl),d
                            133 ;StateEnd2.c:30: if(have_diamond==1){
   005B 21r00r00            134 	ld	hl,#_have_diamond
   005E 7E                  135 	ld	a,(hl)
   005F 3D                  136 	dec	a
   0060 C2rA9r00            137 	jp	NZ,00103$
   0063 23                  138 	inc	hl
   0064 7E                  139 	ld	a,(hl)
   0065 B7                  140 	or	a, a
   0066 C2rA9r00            141 	jp	NZ,00103$
                            142 ;StateEnd2.c:31: SpriteManagerAdd(SPRITE_DIAMOND, 80, 72);
   0069 21 48 00            143 	ld	hl,#0x0048
   006C E5                  144 	push	hl
   006D 2E 50               145 	ld	l, #0x50
   006F E5                  146 	push	hl
   0070 3E 09               147 	ld	a,#0x09
   0072 F5                  148 	push	af
   0073 33                  149 	inc	sp
   0074 CDr00r00            150 	call	_SpriteManagerAdd
   0077 E8 05               151 	add	sp, #5
                            152 ;StateEnd2.c:32: SpriteManagerAdd(SPRITE_DIAMOND, 64, 72);
   0079 21 48 00            153 	ld	hl,#0x0048
   007C E5                  154 	push	hl
   007D 2E 40               155 	ld	l, #0x40
   007F E5                  156 	push	hl
   0080 3E 09               157 	ld	a,#0x09
   0082 F5                  158 	push	af
   0083 33                  159 	inc	sp
   0084 CDr00r00            160 	call	_SpriteManagerAdd
   0087 E8 05               161 	add	sp, #5
                            162 ;StateEnd2.c:33: SpriteManagerAdd(SPRITE_DIAMOND, 128, 112);
   0089 21 70 00            163 	ld	hl,#0x0070
   008C E5                  164 	push	hl
   008D 2E 80               165 	ld	l, #0x80
   008F E5                  166 	push	hl
   0090 3E 09               167 	ld	a,#0x09
   0092 F5                  168 	push	af
   0093 33                  169 	inc	sp
   0094 CDr00r00            170 	call	_SpriteManagerAdd
   0097 E8 05               171 	add	sp, #5
                            172 ;StateEnd2.c:34: SpriteManagerAdd(SPRITE_DIAMOND, 16, 112);
   0099 21 70 00            173 	ld	hl,#0x0070
   009C E5                  174 	push	hl
   009D 2E 10               175 	ld	l, #0x10
   009F E5                  176 	push	hl
   00A0 3E 09               177 	ld	a,#0x09
   00A2 F5                  178 	push	af
   00A3 33                  179 	inc	sp
   00A4 CDr00r00            180 	call	_SpriteManagerAdd
   00A7 E8 05               181 	add	sp, #5
   00A9                     182 00103$:
                            183 ;StateEnd2.c:37: InitScrollTiles(0, 59, tiles, 3);
   00A9 21 00 00            184 	ld	hl,#0x0000
   00AC E5                  185 	push	hl
   00AD 3E 03               186 	ld	a,#0x03
   00AF F5                  187 	push	af
   00B0 33                  188 	inc	sp
   00B1 21r00r00            189 	ld	hl,#_tiles
   00B4 E5                  190 	push	hl
   00B5 21 00 3B            191 	ld	hl,#0x3b00
   00B8 E5                  192 	push	hl
   00B9 CDr00r00            193 	call	_ZInitScrollTilesColor
   00BC E8 07               194 	add	sp, #7
                            195 ;StateEnd2.c:38: InitScroll(endWidth,endHeight,end, collilision_tiles4, 0, 3);
   00BE 21 00 00            196 	ld	hl,#0x0000
   00C1 E5                  197 	push	hl
   00C2 3E 03               198 	ld	a,#0x03
   00C4 F5                  199 	push	af
   00C5 33                  200 	inc	sp
   00C6 2E 00               201 	ld	l, #0x00
   00C8 E5                  202 	push	hl
   00C9 21r01r00            203 	ld	hl,#_collilision_tiles4
   00CC E5                  204 	push	hl
   00CD 21r00r00            205 	ld	hl,#_end
   00D0 E5                  206 	push	hl
   00D1 21 12 00            207 	ld	hl,#0x0012
   00D4 E5                  208 	push	hl
   00D5 2E 14               209 	ld	l, #0x14
   00D7 E5                  210 	push	hl
   00D8 CDr00r00            211 	call	_InitScrollColor
   00DB E8 0D               212 	add	sp, #13
                            213 ;StateEnd2.c:39: SHOW_BKG;
   00DD 11 40 FF            214 	ld	de,#0xff40
   00E0 1A                  215 	ld	a,(de)
   00E1 4F                  216 	ld	c,a
   00E2 06 00               217 	ld	b,#0x00
   00E4 79                  218 	ld	a,c
   00E5 CB C7               219 	set	0, a
   00E7 4F                  220 	ld	c,a
   00E8 21 40 FF            221 	ld	hl,#0xff40
   00EB 71                  222 	ld	(hl),c
   00EC C9                  223 	ret
                            224 ;StateEnd2.c:44: void Update_STATE_END2() {
                            225 ;	---------------------------------
                            226 ; Function Update_STATE_END2
                            227 ; ---------------------------------
   00ED                     228 _Update_STATE_END2::
                            229 ;StateEnd2.c:45: if(have_diamond==5){
   00ED 21r00r00            230 	ld	hl,#_have_diamond
   00F0 7E                  231 	ld	a,(hl)
   00F1 D6 05               232 	sub	a, #0x05
   00F3 C0                  233 	ret	NZ
   00F4 23                  234 	inc	hl
   00F5 7E                  235 	ld	a,(hl)
   00F6 B7                  236 	or	a, a
   00F7 C0                  237 	ret	NZ
                            238 ;StateEnd2.c:46: SetState(STATE_MENU);
   00F8 AF                  239 	xor	a, a
   00F9 F5                  240 	push	af
   00FA 33                  241 	inc	sp
   00FB CDr00r00            242 	call	_SetState
   00FE 33                  243 	inc	sp
   00FF C9                  244 	ret
                            245 	.area _CODE_2
                            246 	.area _CABS (ABS)
