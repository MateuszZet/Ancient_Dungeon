                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.6.0 #9615 (MINGW64)
                              4 ;--------------------------------------------------------
                              5 	.module StateEnd2
                              6 	.optsdcc -mgbz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _SpriteManagerAdd
                             12 	.globl _SpriteManagerLoad
                             13 	.globl _InitScrollColor
                             14 	.globl _ZInitScrollTilesColor
                             15 	.globl _SetState
                             16 	.globl _collilision_tiles4
                             17 	.globl _bank_STATE_END2
                             18 	.globl _Start_STATE_END2
                             19 	.globl _Update_STATE_END2
                             20 ;--------------------------------------------------------
                             21 ; ram data
                             22 ;--------------------------------------------------------
                             23 	.area _DATA
   0000                      24 _bank_STATE_END2::
   0000                      25 	.ds 1
   0001                      26 _collilision_tiles4::
   0001                      27 	.ds 5
                             28 ;--------------------------------------------------------
                             29 ; absolute external ram data
                             30 ;--------------------------------------------------------
                             31 	.area _DABS (ABS)
                             32 ;--------------------------------------------------------
                             33 ; global & static initialisations
                             34 ;--------------------------------------------------------
                             35 	.area _HOME
                             36 	.area _GSINIT
                             37 	.area _GSFINAL
                             38 	.area _GSINIT
                             39 ;StateEnd2.c:3: UINT8 bank_STATE_END2 = 2;
   0000 21r00r00             40 	ld	hl,#_bank_STATE_END2
   0003 36 02                41 	ld	(hl),#0x02
                             42 ;StateEnd2.c:13: UINT8 collilision_tiles4[] = { 1,2,3,4,0 };
   0005 21r01r00             43 	ld	hl,#_collilision_tiles4
   0008 36 01                44 	ld	(hl),#0x01
   000A 21r02r00             45 	ld	hl,#(_collilision_tiles4 + 0x0001)
   000D 36 02                46 	ld	(hl),#0x02
   000F 21r03r00             47 	ld	hl,#(_collilision_tiles4 + 0x0002)
   0012 36 03                48 	ld	(hl),#0x03
   0014 21r04r00             49 	ld	hl,#(_collilision_tiles4 + 0x0003)
   0017 36 04                50 	ld	(hl),#0x04
   0019 21r05r00             51 	ld	hl,#(_collilision_tiles4 + 0x0004)
   001C 36 00                52 	ld	(hl),#0x00
                             53 ;--------------------------------------------------------
                             54 ; Home
                             55 ;--------------------------------------------------------
                             56 	.area _HOME
                             57 	.area _HOME
                             58 ;--------------------------------------------------------
                             59 ; code
                             60 ;--------------------------------------------------------
                             61 	.area _CODE_2
                             62 ;StateEnd2.c:15: void Start_STATE_END2() {
                             63 ;	---------------------------------
                             64 ; Function Start_STATE_END2
                             65 ; ---------------------------------
   0000                      66 _Start_STATE_END2::
                             67 ;StateEnd2.c:17: next_lvl =1;
   0000 21r00r00             68 	ld	hl,#_next_lvl
   0003 36 01                69 	ld	(hl),#0x01
   0005 23                   70 	inc	hl
   0006 36 00                71 	ld	(hl),#0x00
                             72 ;StateEnd2.c:18: NR52_REG = 0x80; //Enables sound, you should always setup this first
   0008 21 26 FF             73 	ld	hl,#0xff26
   000B 36 80                74 	ld	(hl),#0x80
                             75 ;StateEnd2.c:19: NR51_REG = 0xFF; //Enables all channels (left and right)
   000D 2E 25                76 	ld	l, #0x25
   000F 36 FF                77 	ld	(hl),#0xff
                             78 ;StateEnd2.c:20: NR50_REG = 0x77; //Max volume
   0011 2E 24                79 	ld	l, #0x24
   0013 36 77                80 	ld	(hl),#0x77
                             81 ;StateEnd2.c:22: SPRITES_8x16;
   0015 11 40 FF             82 	ld	de,#0xff40
   0018 1A                   83 	ld	a,(de)
   0019 4F                   84 	ld	c,a
   001A 06 00                85 	ld	b,#0x00
   001C 79                   86 	ld	a,c
   001D CB D7                87 	set	2, a
   001F 4F                   88 	ld	c,a
   0020 2E 40                89 	ld	l, #0x40
   0022 71                   90 	ld	(hl),c
                             91 ;StateEnd2.c:23: for(i = 0; i != n_sprite_types; ++ i) {
   0023 06 00                92 	ld	b,#0x00
   0025                      93 00107$:
   0025 21r00r00             94 	ld	hl,#_n_sprite_types
   0028 7E                   95 	ld	a,(hl)
   0029 90                   96 	sub	a, b
   002A 28 0B                97 	jr	Z,00101$
                             98 ;StateEnd2.c:24: SpriteManagerLoad(i);
   002C C5                   99 	push	bc
   002D C5                  100 	push	bc
   002E 33                  101 	inc	sp
   002F CDr00r00            102 	call	_SpriteManagerLoad
   0032 33                  103 	inc	sp
   0033 C1                  104 	pop	bc
                            105 ;StateEnd2.c:23: for(i = 0; i != n_sprite_types; ++ i) {
   0034 04                  106 	inc	b
   0035 18 EE               107 	jr	00107$
   0037                     108 00101$:
                            109 ;StateEnd2.c:26: SHOW_SPRITES;
   0037 11 40 FF            110 	ld	de,#0xff40
   003A 1A                  111 	ld	a,(de)
   003B 4F                  112 	ld	c,a
   003C 06 00               113 	ld	b,#0x00
   003E 79                  114 	ld	a,c
   003F CB CF               115 	set	1, a
   0041 4F                  116 	ld	c,a
   0042 21 40 FF            117 	ld	hl,#0xff40
   0045 71                  118 	ld	(hl),c
                            119 ;StateEnd2.c:28: have_bomb=0;
   0046 21r00r00            120 	ld	hl,#_have_bomb
   0049 36 00               121 	ld	(hl),#0x00
   004B 23                  122 	inc	hl
   004C 36 00               123 	ld	(hl),#0x00
                            124 ;StateEnd2.c:30: scroll_target = SpriteManagerAdd(SPRITE_PLAYER, 70, 35);
   004E 21 23 00            125 	ld	hl,#0x0023
   0051 E5                  126 	push	hl
   0052 2E 46               127 	ld	l, #0x46
   0054 E5                  128 	push	hl
   0055 AF                  129 	xor	a, a
   0056 F5                  130 	push	af
   0057 33                  131 	inc	sp
   0058 CDr00r00            132 	call	_SpriteManagerAdd
   005B E8 05               133 	add	sp, #5
   005D 21r00r00            134 	ld	hl,#_scroll_target
   0060 73                  135 	ld	(hl),e
   0061 23                  136 	inc	hl
   0062 72                  137 	ld	(hl),d
                            138 ;StateEnd2.c:32: if(have_diamond==1){
   0063 21r00r00            139 	ld	hl,#_have_diamond
   0066 7E                  140 	ld	a,(hl)
   0067 3D                  141 	dec	a
   0068 20 25               142 	jr	NZ,00103$
   006A 23                  143 	inc	hl
   006B 7E                  144 	ld	a,(hl)
   006C B7                  145 	or	a, a
   006D 20 20               146 	jr	NZ,00103$
                            147 ;StateEnd2.c:33: SpriteManagerAdd(SPRITE_DIAMOND, 80, 72);
   006F 21 48 00            148 	ld	hl,#0x0048
   0072 E5                  149 	push	hl
   0073 2E 50               150 	ld	l, #0x50
   0075 E5                  151 	push	hl
   0076 3E 09               152 	ld	a,#0x09
   0078 F5                  153 	push	af
   0079 33                  154 	inc	sp
   007A CDr00r00            155 	call	_SpriteManagerAdd
   007D E8 05               156 	add	sp, #5
                            157 ;StateEnd2.c:34: SpriteManagerAdd(SPRITE_DIAMOND, 64, 72);
   007F 21 48 00            158 	ld	hl,#0x0048
   0082 E5                  159 	push	hl
   0083 2E 40               160 	ld	l, #0x40
   0085 E5                  161 	push	hl
   0086 3E 09               162 	ld	a,#0x09
   0088 F5                  163 	push	af
   0089 33                  164 	inc	sp
   008A CDr00r00            165 	call	_SpriteManagerAdd
   008D E8 05               166 	add	sp, #5
   008F                     167 00103$:
                            168 ;StateEnd2.c:37: if(have_diamond==6){
   008F 21r00r00            169 	ld	hl,#_have_diamond
   0092 7E                  170 	ld	a,(hl)
   0093 D6 06               171 	sub	a, #0x06
   0095 C2rDEr00            172 	jp	NZ,00105$
   0098 23                  173 	inc	hl
   0099 7E                  174 	ld	a,(hl)
   009A B7                  175 	or	a, a
   009B C2rDEr00            176 	jp	NZ,00105$
                            177 ;StateEnd2.c:38: SpriteManagerAdd(SPRITE_DIAMOND, 80, 72);
   009E 21 48 00            178 	ld	hl,#0x0048
   00A1 E5                  179 	push	hl
   00A2 2E 50               180 	ld	l, #0x50
   00A4 E5                  181 	push	hl
   00A5 3E 09               182 	ld	a,#0x09
   00A7 F5                  183 	push	af
   00A8 33                  184 	inc	sp
   00A9 CDr00r00            185 	call	_SpriteManagerAdd
   00AC E8 05               186 	add	sp, #5
                            187 ;StateEnd2.c:39: SpriteManagerAdd(SPRITE_DIAMOND, 64, 72);
   00AE 21 48 00            188 	ld	hl,#0x0048
   00B1 E5                  189 	push	hl
   00B2 2E 40               190 	ld	l, #0x40
   00B4 E5                  191 	push	hl
   00B5 3E 09               192 	ld	a,#0x09
   00B7 F5                  193 	push	af
   00B8 33                  194 	inc	sp
   00B9 CDr00r00            195 	call	_SpriteManagerAdd
   00BC E8 05               196 	add	sp, #5
                            197 ;StateEnd2.c:40: SpriteManagerAdd(SPRITE_DIAMOND, 128, 112);
   00BE 21 70 00            198 	ld	hl,#0x0070
   00C1 E5                  199 	push	hl
   00C2 2E 80               200 	ld	l, #0x80
   00C4 E5                  201 	push	hl
   00C5 3E 09               202 	ld	a,#0x09
   00C7 F5                  203 	push	af
   00C8 33                  204 	inc	sp
   00C9 CDr00r00            205 	call	_SpriteManagerAdd
   00CC E8 05               206 	add	sp, #5
                            207 ;StateEnd2.c:41: SpriteManagerAdd(SPRITE_DIAMOND, 16, 112);
   00CE 21 70 00            208 	ld	hl,#0x0070
   00D1 E5                  209 	push	hl
   00D2 2E 10               210 	ld	l, #0x10
   00D4 E5                  211 	push	hl
   00D5 3E 09               212 	ld	a,#0x09
   00D7 F5                  213 	push	af
   00D8 33                  214 	inc	sp
   00D9 CDr00r00            215 	call	_SpriteManagerAdd
   00DC E8 05               216 	add	sp, #5
   00DE                     217 00105$:
                            218 ;StateEnd2.c:44: InitScrollTiles(0, 59, tiles, 3);
   00DE 21 00 00            219 	ld	hl,#0x0000
   00E1 E5                  220 	push	hl
   00E2 3E 03               221 	ld	a,#0x03
   00E4 F5                  222 	push	af
   00E5 33                  223 	inc	sp
   00E6 21r00r00            224 	ld	hl,#_tiles
   00E9 E5                  225 	push	hl
   00EA 21 00 3B            226 	ld	hl,#0x3b00
   00ED E5                  227 	push	hl
   00EE CDr00r00            228 	call	_ZInitScrollTilesColor
   00F1 E8 07               229 	add	sp, #7
                            230 ;StateEnd2.c:45: InitScroll(endWidth,endHeight,end, collilision_tiles4, 0, 3);
   00F3 21 00 00            231 	ld	hl,#0x0000
   00F6 E5                  232 	push	hl
   00F7 3E 03               233 	ld	a,#0x03
   00F9 F5                  234 	push	af
   00FA 33                  235 	inc	sp
   00FB 2E 00               236 	ld	l, #0x00
   00FD E5                  237 	push	hl
   00FE 21r01r00            238 	ld	hl,#_collilision_tiles4
   0101 E5                  239 	push	hl
   0102 21r00r00            240 	ld	hl,#_end
   0105 E5                  241 	push	hl
   0106 21 12 00            242 	ld	hl,#0x0012
   0109 E5                  243 	push	hl
   010A 2E 14               244 	ld	l, #0x14
   010C E5                  245 	push	hl
   010D CDr00r00            246 	call	_InitScrollColor
   0110 E8 0D               247 	add	sp, #13
                            248 ;StateEnd2.c:46: SHOW_BKG;
   0112 11 40 FF            249 	ld	de,#0xff40
   0115 1A                  250 	ld	a,(de)
   0116 4F                  251 	ld	c,a
   0117 06 00               252 	ld	b,#0x00
   0119 79                  253 	ld	a,c
   011A CB C7               254 	set	0, a
   011C 4F                  255 	ld	c,a
   011D 21 40 FF            256 	ld	hl,#0xff40
   0120 71                  257 	ld	(hl),c
   0121 C9                  258 	ret
                            259 ;StateEnd2.c:51: void Update_STATE_END2() {
                            260 ;	---------------------------------
                            261 ; Function Update_STATE_END2
                            262 ; ---------------------------------
   0122                     263 _Update_STATE_END2::
                            264 ;StateEnd2.c:52: if(have_diamond==3 || have_diamond==10){
   0122 21r00r00            265 	ld	hl,#_have_diamond
   0125 7E                  266 	ld	a,(hl)
   0126 D6 03               267 	sub	a, #0x03
   0128 20 05               268 	jr	NZ,00110$
   012A 23                  269 	inc	hl
   012B 7E                  270 	ld	a,(hl)
   012C B7                  271 	or	a, a
   012D 28 0B               272 	jr	Z,00101$
   012F                     273 00110$:
   012F 21r00r00            274 	ld	hl,#_have_diamond
   0132 7E                  275 	ld	a,(hl)
   0133 D6 0A               276 	sub	a, #0x0a
   0135 C0                  277 	ret	NZ
   0136 23                  278 	inc	hl
   0137 7E                  279 	ld	a,(hl)
   0138 B7                  280 	or	a, a
   0139 C0                  281 	ret	NZ
   013A                     282 00101$:
                            283 ;StateEnd2.c:53: SetState(STATE_MENU);
   013A AF                  284 	xor	a, a
   013B F5                  285 	push	af
   013C 33                  286 	inc	sp
   013D CDr00r00            287 	call	_SetState
   0140 33                  288 	inc	sp
   0141 C9                  289 	ret
                            290 	.area _CODE_2
                            291 	.area _CABS (ABS)
