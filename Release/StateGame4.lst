                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.6.0 #9615 (MINGW64)
                              4 ;--------------------------------------------------------
                              5 	.module StateGame4
                              6 	.optsdcc -mgbz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _SpriteManagerAdd
                             12 	.globl _SpriteManagerLoad
                             13 	.globl _InitScrollColor
                             14 	.globl _ZInitScrollTilesColor
                             15 	.globl _SetState
                             16 	.globl _collilision_tiles4
                             17 	.globl _bank_STATE_GAME4
                             18 	.globl _Start_STATE_GAME4
                             19 	.globl _Update_STATE_GAME4
                             20 ;--------------------------------------------------------
                             21 ; ram data
                             22 ;--------------------------------------------------------
                             23 	.area _DATA
   0000                      24 _bank_STATE_GAME4::
   0000                      25 	.ds 1
   0001                      26 _collilision_tiles4::
   0001                      27 	.ds 5
                             28 ;--------------------------------------------------------
                             29 ; absolute external ram data
                             30 ;--------------------------------------------------------
                             31 	.area _DABS (ABS)
                             32 ;--------------------------------------------------------
                             33 ; global & static initialisations
                             34 ;--------------------------------------------------------
                             35 	.area _HOME
                             36 	.area _GSINIT
                             37 	.area _GSFINAL
                             38 	.area _GSINIT
                             39 ;StateGame4.c:3: UINT8 bank_STATE_GAME4 = 2;
   0000 21r00r00             40 	ld	hl,#_bank_STATE_GAME4
   0003 36 02                41 	ld	(hl),#0x02
                             42 ;StateGame4.c:14: UINT8 collilision_tiles4[] = { 1,2,3,4,0 };
   0005 21r01r00             43 	ld	hl,#_collilision_tiles4
   0008 36 01                44 	ld	(hl),#0x01
   000A 21r02r00             45 	ld	hl,#(_collilision_tiles4 + 0x0001)
   000D 36 02                46 	ld	(hl),#0x02
   000F 21r03r00             47 	ld	hl,#(_collilision_tiles4 + 0x0002)
   0012 36 03                48 	ld	(hl),#0x03
   0014 21r04r00             49 	ld	hl,#(_collilision_tiles4 + 0x0003)
   0017 36 04                50 	ld	(hl),#0x04
   0019 21r05r00             51 	ld	hl,#(_collilision_tiles4 + 0x0004)
   001C 36 00                52 	ld	(hl),#0x00
                             53 ;--------------------------------------------------------
                             54 ; Home
                             55 ;--------------------------------------------------------
                             56 	.area _HOME
                             57 	.area _HOME
                             58 ;--------------------------------------------------------
                             59 ; code
                             60 ;--------------------------------------------------------
                             61 	.area _CODE_2
                             62 ;StateGame4.c:16: void Start_STATE_GAME4() {
                             63 ;	---------------------------------
                             64 ; Function Start_STATE_GAME4
                             65 ; ---------------------------------
   0000                      66 _Start_STATE_GAME4::
                             67 ;StateGame4.c:18: next_lvl=5;
   0000 21r00r00             68 	ld	hl,#_next_lvl
   0003 36 05                69 	ld	(hl),#0x05
   0005 23                   70 	inc	hl
   0006 36 00                71 	ld	(hl),#0x00
                             72 ;StateGame4.c:19: NR52_REG = 0x80; //Enables sound, you should always setup this first
   0008 21 26 FF             73 	ld	hl,#0xff26
   000B 36 80                74 	ld	(hl),#0x80
                             75 ;StateGame4.c:20: NR51_REG = 0xFF; //Enables all channels (left and right)
   000D 2E 25                76 	ld	l, #0x25
   000F 36 FF                77 	ld	(hl),#0xff
                             78 ;StateGame4.c:21: NR50_REG = 0x77; //Max volume
   0011 2E 24                79 	ld	l, #0x24
   0013 36 77                80 	ld	(hl),#0x77
                             81 ;StateGame4.c:23: SPRITES_8x16;
   0015 11 40 FF             82 	ld	de,#0xff40
   0018 1A                   83 	ld	a,(de)
   0019 4F                   84 	ld	c,a
   001A 06 00                85 	ld	b,#0x00
   001C 79                   86 	ld	a,c
   001D CB D7                87 	set	2, a
   001F 4F                   88 	ld	c,a
   0020 2E 40                89 	ld	l, #0x40
   0022 71                   90 	ld	(hl),c
                             91 ;StateGame4.c:24: for(i = 0; i != n_sprite_types; ++ i) {
   0023 06 00                92 	ld	b,#0x00
   0025                      93 00105$:
   0025 21r00r00             94 	ld	hl,#_n_sprite_types
   0028 7E                   95 	ld	a,(hl)
   0029 90                   96 	sub	a, b
   002A 28 0B                97 	jr	Z,00101$
                             98 ;StateGame4.c:25: SpriteManagerLoad(i);
   002C C5                   99 	push	bc
   002D C5                  100 	push	bc
   002E 33                  101 	inc	sp
   002F CDr00r00            102 	call	_SpriteManagerLoad
   0032 33                  103 	inc	sp
   0033 C1                  104 	pop	bc
                            105 ;StateGame4.c:24: for(i = 0; i != n_sprite_types; ++ i) {
   0034 04                  106 	inc	b
   0035 18 EE               107 	jr	00105$
   0037                     108 00101$:
                            109 ;StateGame4.c:27: SHOW_SPRITES;
   0037 11 40 FF            110 	ld	de,#0xff40
   003A 1A                  111 	ld	a,(de)
   003B 4F                  112 	ld	c,a
   003C 06 00               113 	ld	b,#0x00
   003E 79                  114 	ld	a,c
   003F CB CF               115 	set	1, a
   0041 4F                  116 	ld	c,a
   0042 21 40 FF            117 	ld	hl,#0xff40
   0045 71                  118 	ld	(hl),c
                            119 ;StateGame4.c:29: have_bomb=2;
   0046 21r00r00            120 	ld	hl,#_have_bomb
   0049 36 02               121 	ld	(hl),#0x02
   004B 23                  122 	inc	hl
   004C 36 00               123 	ld	(hl),#0x00
                            124 ;StateGame4.c:31: if( have_diamond == 0 ){
   004E 21r01r00            125 	ld	hl,#_have_diamond + 1
   0051 3A                  126 	ld	a,(hl-)
   0052 B6                  127 	or	a,(hl)
   0053 C2r17r01            128 	jp	NZ,00103$
                            129 ;StateGame4.c:32: scroll_target = SpriteManagerAdd(SPRITE_PLAYER, 200, 200);
   0056 21 C8 00            130 	ld	hl,#0x00c8
   0059 E5                  131 	push	hl
   005A 2E C8               132 	ld	l, #0xc8
   005C E5                  133 	push	hl
   005D AF                  134 	xor	a, a
   005E F5                  135 	push	af
   005F 33                  136 	inc	sp
   0060 CDr00r00            137 	call	_SpriteManagerAdd
   0063 E8 05               138 	add	sp, #5
   0065 21r00r00            139 	ld	hl,#_scroll_target
   0068 73                  140 	ld	(hl),e
   0069 23                  141 	inc	hl
   006A 72                  142 	ld	(hl),d
                            143 ;StateGame4.c:33: door_x = 343;
   006B 21r00r00            144 	ld	hl,#_door_x
   006E 36 57               145 	ld	(hl),#0x57
   0070 23                  146 	inc	hl
   0071 36 01               147 	ld	(hl),#0x01
                            148 ;StateGame4.c:34: door_y = 343;
   0073 21r00r00            149 	ld	hl,#_door_y
   0076 36 57               150 	ld	(hl),#0x57
   0078 23                  151 	inc	hl
   0079 36 01               152 	ld	(hl),#0x01
                            153 ;StateGame4.c:35: SpriteManagerAdd(SPRITE_KEY, 38, 38);
   007B 21 26 00            154 	ld	hl,#0x0026
   007E E5                  155 	push	hl
   007F 2E 26               156 	ld	l, #0x26
   0081 E5                  157 	push	hl
   0082 3E 03               158 	ld	a,#0x03
   0084 F5                  159 	push	af
   0085 33                  160 	inc	sp
   0086 CDr00r00            161 	call	_SpriteManagerAdd
   0089 E8 05               162 	add	sp, #5
                            163 ;StateGame4.c:36: SpriteManagerAdd(SPRITE_DOOR, door_x, door_y);
   008B 21r00r00            164 	ld	hl,#_door_y
   008E 2A                  165 	ld	a,(hl+)
   008F 66                  166 	ld	h,(hl)
   0090 6F                  167 	ld	l,a
   0091 E5                  168 	push	hl
   0092 21r00r00            169 	ld	hl,#_door_x
   0095 2A                  170 	ld	a,(hl+)
   0096 66                  171 	ld	h,(hl)
   0097 6F                  172 	ld	l,a
   0098 E5                  173 	push	hl
   0099 3E 04               174 	ld	a,#0x04
   009B F5                  175 	push	af
   009C 33                  176 	inc	sp
   009D CDr00r00            177 	call	_SpriteManagerAdd
   00A0 E8 05               178 	add	sp, #5
                            179 ;StateGame4.c:38: SpriteManagerAdd(SPRITE_ENEMY3, 352, 190);
   00A2 21 BE 00            180 	ld	hl,#0x00be
   00A5 E5                  181 	push	hl
   00A6 21 60 01            182 	ld	hl,#0x0160
   00A9 E5                  183 	push	hl
   00AA 3E 08               184 	ld	a,#0x08
   00AC F5                  185 	push	af
   00AD 33                  186 	inc	sp
   00AE CDr00r00            187 	call	_SpriteManagerAdd
   00B1 E8 05               188 	add	sp, #5
                            189 ;StateGame4.c:39: SpriteManagerAdd(SPRITE_ENEMY3, 88, 144);
   00B3 21 90 00            190 	ld	hl,#0x0090
   00B6 E5                  191 	push	hl
   00B7 2E 58               192 	ld	l, #0x58
   00B9 E5                  193 	push	hl
   00BA 3E 08               194 	ld	a,#0x08
   00BC F5                  195 	push	af
   00BD 33                  196 	inc	sp
   00BE CDr00r00            197 	call	_SpriteManagerAdd
   00C1 E8 05               198 	add	sp, #5
                            199 ;StateGame4.c:40: SpriteManagerAdd(SPRITE_ENEMY2, 272, 112);
   00C3 21 70 00            200 	ld	hl,#0x0070
   00C6 E5                  201 	push	hl
   00C7 21 10 01            202 	ld	hl,#0x0110
   00CA E5                  203 	push	hl
   00CB 3E 02               204 	ld	a,#0x02
   00CD F5                  205 	push	af
   00CE 33                  206 	inc	sp
   00CF CDr00r00            207 	call	_SpriteManagerAdd
   00D2 E8 05               208 	add	sp, #5
                            209 ;StateGame4.c:41: SpriteManagerAdd(SPRITE_ENEMY, 94, 280);
   00D4 21 18 01            210 	ld	hl,#0x0118
   00D7 E5                  211 	push	hl
   00D8 21 5E 00            212 	ld	hl,#0x005e
   00DB E5                  213 	push	hl
   00DC 3E 01               214 	ld	a,#0x01
   00DE F5                  215 	push	af
   00DF 33                  216 	inc	sp
   00E0 CDr00r00            217 	call	_SpriteManagerAdd
   00E3 E8 05               218 	add	sp, #5
                            219 ;StateGame4.c:42: SpriteManagerAdd(SPRITE_ENEMY, 272, 112);
   00E5 21 70 00            220 	ld	hl,#0x0070
   00E8 E5                  221 	push	hl
   00E9 21 10 01            222 	ld	hl,#0x0110
   00EC E5                  223 	push	hl
   00ED 3E 01               224 	ld	a,#0x01
   00EF F5                  225 	push	af
   00F0 33                  226 	inc	sp
   00F1 CDr00r00            227 	call	_SpriteManagerAdd
   00F4 E8 05               228 	add	sp, #5
                            229 ;StateGame4.c:43: SpriteManagerAdd(SPRITE_ENEMY2, 94, 280);
   00F6 21 18 01            230 	ld	hl,#0x0118
   00F9 E5                  231 	push	hl
   00FA 21 5E 00            232 	ld	hl,#0x005e
   00FD E5                  233 	push	hl
   00FE 3E 02               234 	ld	a,#0x02
   0100 F5                  235 	push	af
   0101 33                  236 	inc	sp
   0102 CDr00r00            237 	call	_SpriteManagerAdd
   0105 E8 05               238 	add	sp, #5
                            239 ;StateGame4.c:44: SpriteManagerAdd(SPRITE_ENEMY2, 312, 344);
   0107 21 58 01            240 	ld	hl,#0x0158
   010A E5                  241 	push	hl
   010B 2E 38               242 	ld	l, #0x38
   010D E5                  243 	push	hl
   010E 3E 02               244 	ld	a,#0x02
   0110 F5                  245 	push	af
   0111 33                  246 	inc	sp
   0112 CDr00r00            247 	call	_SpriteManagerAdd
   0115 E8 05               248 	add	sp, #5
   0117                     249 00103$:
                            250 ;StateGame4.c:59: InitScrollTiles(0, 59, tiles, 3);
   0117 21 00 00            251 	ld	hl,#0x0000
   011A E5                  252 	push	hl
   011B 3E 03               253 	ld	a,#0x03
   011D F5                  254 	push	af
   011E 33                  255 	inc	sp
   011F 21r00r00            256 	ld	hl,#_tiles
   0122 E5                  257 	push	hl
   0123 21 00 3B            258 	ld	hl,#0x3b00
   0126 E5                  259 	push	hl
   0127 CDr00r00            260 	call	_ZInitScrollTilesColor
   012A E8 07               261 	add	sp, #7
                            262 ;StateGame4.c:60: InitScroll(map4Width, map4Height, map4, collilision_tiles4, 0, 3);
   012C 21 00 00            263 	ld	hl,#0x0000
   012F E5                  264 	push	hl
   0130 3E 03               265 	ld	a,#0x03
   0132 F5                  266 	push	af
   0133 33                  267 	inc	sp
   0134 2E 00               268 	ld	l, #0x00
   0136 E5                  269 	push	hl
   0137 21r01r00            270 	ld	hl,#_collilision_tiles4
   013A E5                  271 	push	hl
   013B 21r00r00            272 	ld	hl,#_map4
   013E E5                  273 	push	hl
   013F 21 32 00            274 	ld	hl,#0x0032
   0142 E5                  275 	push	hl
   0143 2E 32               276 	ld	l, #0x32
   0145 E5                  277 	push	hl
   0146 CDr00r00            278 	call	_InitScrollColor
   0149 E8 0D               279 	add	sp, #13
                            280 ;StateGame4.c:61: SHOW_BKG;
   014B 11 40 FF            281 	ld	de,#0xff40
   014E 1A                  282 	ld	a,(de)
   014F 4F                  283 	ld	c,a
   0150 06 00               284 	ld	b,#0x00
   0152 79                  285 	ld	a,c
   0153 CB C7               286 	set	0, a
   0155 4F                  287 	ld	c,a
   0156 21 40 FF            288 	ld	hl,#0xff40
   0159 71                  289 	ld	(hl),c
   015A C9                  290 	ret
                            291 ;StateGame4.c:66: void Update_STATE_GAME4() {
                            292 ;	---------------------------------
                            293 ; Function Update_STATE_GAME4
                            294 ; ---------------------------------
   015B                     295 _Update_STATE_GAME4::
                            296 ;StateGame4.c:67: if (KEY_PRESSED(J_START)) {
   015B 21r00r00            297 	ld	hl,#_keys
   015E 4E                  298 	ld	c,(hl)
   015F 06 00               299 	ld	b,#0x00
   0161 CB 79               300 	bit	7, c
   0163 C8                  301 	ret	Z
                            302 ;StateGame4.c:68: SetState(STATE_GAME5);
   0164 3E 05               303 	ld	a,#0x05
   0166 F5                  304 	push	af
   0167 33                  305 	inc	sp
   0168 CDr00r00            306 	call	_SetState
   016B 33                  307 	inc	sp
   016C C9                  308 	ret
                            309 	.area _CODE_2
                            310 	.area _CABS (ABS)
