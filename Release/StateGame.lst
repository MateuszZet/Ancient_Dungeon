                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.6.0 #9615 (MINGW64)
                              4 ;--------------------------------------------------------
                              5 	.module StateGame
                              6 	.optsdcc -mgbz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _SpriteManagerAdd
                             12 	.globl _SpriteManagerLoad
                             13 	.globl _InitScrollColor
                             14 	.globl _ZInitScrollTilesColor
                             15 	.globl _SetState
                             16 	.globl _collilision_tiles
                             17 	.globl _bank_STATE_GAME
                             18 	.globl _Start_STATE_GAME
                             19 	.globl _Update_STATE_GAME
                             20 ;--------------------------------------------------------
                             21 ; ram data
                             22 ;--------------------------------------------------------
                             23 	.area _DATA
   0000                      24 _bank_STATE_GAME::
   0000                      25 	.ds 1
   0001                      26 _collilision_tiles::
   0001                      27 	.ds 5
                             28 ;--------------------------------------------------------
                             29 ; absolute external ram data
                             30 ;--------------------------------------------------------
                             31 	.area _DABS (ABS)
                             32 ;--------------------------------------------------------
                             33 ; global & static initialisations
                             34 ;--------------------------------------------------------
                             35 	.area _HOME
                             36 	.area _GSINIT
                             37 	.area _GSFINAL
                             38 	.area _GSINIT
                             39 ;StateGame.c:3: UINT8 bank_STATE_GAME = 2;
   0000 21r00r00             40 	ld	hl,#_bank_STATE_GAME
   0003 36 02                41 	ld	(hl),#0x02
                             42 ;StateGame.c:14: UINT8 collilision_tiles[] = { 1,2,3,4,0 };
   0005 21r01r00             43 	ld	hl,#_collilision_tiles
   0008 36 01                44 	ld	(hl),#0x01
   000A 21r02r00             45 	ld	hl,#(_collilision_tiles + 0x0001)
   000D 36 02                46 	ld	(hl),#0x02
   000F 21r03r00             47 	ld	hl,#(_collilision_tiles + 0x0002)
   0012 36 03                48 	ld	(hl),#0x03
   0014 21r04r00             49 	ld	hl,#(_collilision_tiles + 0x0003)
   0017 36 04                50 	ld	(hl),#0x04
   0019 21r05r00             51 	ld	hl,#(_collilision_tiles + 0x0004)
   001C 36 00                52 	ld	(hl),#0x00
                             53 ;--------------------------------------------------------
                             54 ; Home
                             55 ;--------------------------------------------------------
                             56 	.area _HOME
                             57 	.area _HOME
                             58 ;--------------------------------------------------------
                             59 ; code
                             60 ;--------------------------------------------------------
                             61 	.area _CODE_2
                             62 ;StateGame.c:16: void Start_STATE_GAME() {
                             63 ;	---------------------------------
                             64 ; Function Start_STATE_GAME
                             65 ; ---------------------------------
   0000                      66 _Start_STATE_GAME::
                             67 ;StateGame.c:18: next_lvl=2;
   0000 21r00r00             68 	ld	hl,#_next_lvl
   0003 36 02                69 	ld	(hl),#0x02
   0005 23                   70 	inc	hl
   0006 36 00                71 	ld	(hl),#0x00
                             72 ;StateGame.c:19: NR52_REG = 0x80; //Enables sound, you should always setup this first
   0008 21 26 FF             73 	ld	hl,#0xff26
   000B 36 80                74 	ld	(hl),#0x80
                             75 ;StateGame.c:20: NR51_REG = 0xFF; //Enables all channels (left and right)
   000D 2E 25                76 	ld	l, #0x25
   000F 36 FF                77 	ld	(hl),#0xff
                             78 ;StateGame.c:21: NR50_REG = 0x77; //Max volume
   0011 2E 24                79 	ld	l, #0x24
   0013 36 77                80 	ld	(hl),#0x77
                             81 ;StateGame.c:23: SPRITES_8x16;
   0015 11 40 FF             82 	ld	de,#0xff40
   0018 1A                   83 	ld	a,(de)
   0019 4F                   84 	ld	c,a
   001A 06 00                85 	ld	b,#0x00
   001C 79                   86 	ld	a,c
   001D CB D7                87 	set	2, a
   001F 4F                   88 	ld	c,a
   0020 2E 40                89 	ld	l, #0x40
   0022 71                   90 	ld	(hl),c
                             91 ;StateGame.c:24: for(i = 0; i != n_sprite_types; ++ i) {
   0023 06 00                92 	ld	b,#0x00
   0025                      93 00106$:
   0025 21r00r00             94 	ld	hl,#_n_sprite_types
   0028 7E                   95 	ld	a,(hl)
   0029 90                   96 	sub	a, b
   002A 28 0B                97 	jr	Z,00101$
                             98 ;StateGame.c:25: SpriteManagerLoad(i);
   002C C5                   99 	push	bc
   002D C5                  100 	push	bc
   002E 33                  101 	inc	sp
   002F CDr00r00            102 	call	_SpriteManagerLoad
   0032 33                  103 	inc	sp
   0033 C1                  104 	pop	bc
                            105 ;StateGame.c:24: for(i = 0; i != n_sprite_types; ++ i) {
   0034 04                  106 	inc	b
   0035 18 EE               107 	jr	00106$
   0037                     108 00101$:
                            109 ;StateGame.c:27: SHOW_SPRITES;
   0037 11 40 FF            110 	ld	de,#0xff40
   003A 1A                  111 	ld	a,(de)
   003B 4F                  112 	ld	c,a
   003C 06 00               113 	ld	b,#0x00
   003E 79                  114 	ld	a,c
   003F CB CF               115 	set	1, a
   0041 4F                  116 	ld	c,a
   0042 21 40 FF            117 	ld	hl,#0xff40
   0045 71                  118 	ld	(hl),c
                            119 ;StateGame.c:29: scroll_target = SpriteManagerAdd(SPRITE_PLAYER, 20, 100);
   0046 21 64 00            120 	ld	hl,#0x0064
   0049 E5                  121 	push	hl
   004A 2E 14               122 	ld	l, #0x14
   004C E5                  123 	push	hl
   004D AF                  124 	xor	a, a
   004E F5                  125 	push	af
   004F 33                  126 	inc	sp
   0050 CDr00r00            127 	call	_SpriteManagerAdd
   0053 E8 05               128 	add	sp, #5
   0055 21r00r00            129 	ld	hl,#_scroll_target
   0058 73                  130 	ld	(hl),e
   0059 23                  131 	inc	hl
   005A 72                  132 	ld	(hl),d
                            133 ;StateGame.c:30: door_x = 240;
   005B 21r00r00            134 	ld	hl,#_door_x
   005E 36 F0               135 	ld	(hl),#0xf0
   0060 23                  136 	inc	hl
   0061 36 00               137 	ld	(hl),#0x00
                            138 ;StateGame.c:31: door_y = 112;
   0063 21r00r00            139 	ld	hl,#_door_y
   0066 36 70               140 	ld	(hl),#0x70
   0068 23                  141 	inc	hl
   0069 36 00               142 	ld	(hl),#0x00
                            143 ;StateGame.c:33: if( have_diamond == 1){
   006B 21r00r00            144 	ld	hl,#_have_diamond
   006E 7E                  145 	ld	a,(hl)
   006F 3D                  146 	dec	a
   0070 20 0F               147 	jr	NZ,00103$
   0072 23                  148 	inc	hl
   0073 7E                  149 	ld	a,(hl)
   0074 B7                  150 	or	a, a
   0075 20 0A               151 	jr	NZ,00103$
                            152 ;StateGame.c:34: have_bomb=0;
   0077 21r00r00            153 	ld	hl,#_have_bomb
   007A 36 00               154 	ld	(hl),#0x00
   007C 23                  155 	inc	hl
   007D 36 00               156 	ld	(hl),#0x00
   007F 18 08               157 	jr	00104$
   0081                     158 00103$:
                            159 ;StateGame.c:37: have_bomb = 4;
   0081 21r00r00            160 	ld	hl,#_have_bomb
   0084 36 04               161 	ld	(hl),#0x04
   0086 23                  162 	inc	hl
   0087 36 00               163 	ld	(hl),#0x00
   0089                     164 00104$:
                            165 ;StateGame.c:40: SpriteManagerAdd(SPRITE_KEY, 288, 112);
   0089 21 70 00            166 	ld	hl,#0x0070
   008C E5                  167 	push	hl
   008D 21 20 01            168 	ld	hl,#0x0120
   0090 E5                  169 	push	hl
   0091 3E 03               170 	ld	a,#0x03
   0093 F5                  171 	push	af
   0094 33                  172 	inc	sp
   0095 CDr00r00            173 	call	_SpriteManagerAdd
   0098 E8 05               174 	add	sp, #5
                            175 ;StateGame.c:41: SpriteManagerAdd(SPRITE_DOOR, door_x, door_y);
   009A 21r00r00            176 	ld	hl,#_door_y
   009D 2A                  177 	ld	a,(hl+)
   009E 66                  178 	ld	h,(hl)
   009F 6F                  179 	ld	l,a
   00A0 E5                  180 	push	hl
   00A1 21r00r00            181 	ld	hl,#_door_x
   00A4 2A                  182 	ld	a,(hl+)
   00A5 66                  183 	ld	h,(hl)
   00A6 6F                  184 	ld	l,a
   00A7 E5                  185 	push	hl
   00A8 3E 04               186 	ld	a,#0x04
   00AA F5                  187 	push	af
   00AB 33                  188 	inc	sp
   00AC CDr00r00            189 	call	_SpriteManagerAdd
   00AF E8 05               190 	add	sp, #5
                            191 ;StateGame.c:43: SpriteManagerAdd(SPRITE_ENEMY, 40, 32);
   00B1 21 20 00            192 	ld	hl,#0x0020
   00B4 E5                  193 	push	hl
   00B5 2E 28               194 	ld	l, #0x28
   00B7 E5                  195 	push	hl
   00B8 3E 01               196 	ld	a,#0x01
   00BA F5                  197 	push	af
   00BB 33                  198 	inc	sp
   00BC CDr00r00            199 	call	_SpriteManagerAdd
   00BF E8 05               200 	add	sp, #5
                            201 ;StateGame.c:44: SpriteManagerAdd(SPRITE_ENEMY, 128, 80);
   00C1 21 50 00            202 	ld	hl,#0x0050
   00C4 E5                  203 	push	hl
   00C5 2E 80               204 	ld	l, #0x80
   00C7 E5                  205 	push	hl
   00C8 3E 01               206 	ld	a,#0x01
   00CA F5                  207 	push	af
   00CB 33                  208 	inc	sp
   00CC CDr00r00            209 	call	_SpriteManagerAdd
   00CF E8 05               210 	add	sp, #5
                            211 ;StateGame.c:45: SpriteManagerAdd(SPRITE_ENEMY, 200, 112);
   00D1 21 70 00            212 	ld	hl,#0x0070
   00D4 E5                  213 	push	hl
   00D5 2E C8               214 	ld	l, #0xc8
   00D7 E5                  215 	push	hl
   00D8 3E 01               216 	ld	a,#0x01
   00DA F5                  217 	push	af
   00DB 33                  218 	inc	sp
   00DC CDr00r00            219 	call	_SpriteManagerAdd
   00DF E8 05               220 	add	sp, #5
                            221 ;StateGame.c:46: SpriteManagerAdd(SPRITE_ENEMY, 288, 96);
   00E1 21 60 00            222 	ld	hl,#0x0060
   00E4 E5                  223 	push	hl
   00E5 21 20 01            224 	ld	hl,#0x0120
   00E8 E5                  225 	push	hl
   00E9 3E 01               226 	ld	a,#0x01
   00EB F5                  227 	push	af
   00EC 33                  228 	inc	sp
   00ED CDr00r00            229 	call	_SpriteManagerAdd
   00F0 E8 05               230 	add	sp, #5
                            231 ;StateGame.c:47: SpriteManagerAdd(SPRITE_ENEMY3, 30, 30);
   00F2 21 1E 00            232 	ld	hl,#0x001e
   00F5 E5                  233 	push	hl
   00F6 2E 1E               234 	ld	l, #0x1e
   00F8 E5                  235 	push	hl
   00F9 3E 08               236 	ld	a,#0x08
   00FB F5                  237 	push	af
   00FC 33                  238 	inc	sp
   00FD CDr00r00            239 	call	_SpriteManagerAdd
   0100 E8 05               240 	add	sp, #5
                            241 ;StateGame.c:49: InitScrollTiles(0, 59, tiles, 3);
   0102 21 00 00            242 	ld	hl,#0x0000
   0105 E5                  243 	push	hl
   0106 3E 03               244 	ld	a,#0x03
   0108 F5                  245 	push	af
   0109 33                  246 	inc	sp
   010A 21r00r00            247 	ld	hl,#_tiles
   010D E5                  248 	push	hl
   010E 21 00 3B            249 	ld	hl,#0x3b00
   0111 E5                  250 	push	hl
   0112 CDr00r00            251 	call	_ZInitScrollTilesColor
   0115 E8 07               252 	add	sp, #7
                            253 ;StateGame.c:50: InitScroll(mapWidth, mapHeight, map, collilision_tiles, 0, 3);
   0117 21 00 00            254 	ld	hl,#0x0000
   011A E5                  255 	push	hl
   011B 3E 03               256 	ld	a,#0x03
   011D F5                  257 	push	af
   011E 33                  258 	inc	sp
   011F 2E 00               259 	ld	l, #0x00
   0121 E5                  260 	push	hl
   0122 21r01r00            261 	ld	hl,#_collilision_tiles
   0125 E5                  262 	push	hl
   0126 21r00r00            263 	ld	hl,#_map
   0129 E5                  264 	push	hl
   012A 21 12 00            265 	ld	hl,#0x0012
   012D E5                  266 	push	hl
   012E 2E 28               267 	ld	l, #0x28
   0130 E5                  268 	push	hl
   0131 CDr00r00            269 	call	_InitScrollColor
   0134 E8 0D               270 	add	sp, #13
                            271 ;StateGame.c:51: SHOW_BKG;
   0136 11 40 FF            272 	ld	de,#0xff40
   0139 1A                  273 	ld	a,(de)
   013A 4F                  274 	ld	c,a
   013B 06 00               275 	ld	b,#0x00
   013D 79                  276 	ld	a,c
   013E CB C7               277 	set	0, a
   0140 4F                  278 	ld	c,a
   0141 21 40 FF            279 	ld	hl,#0xff40
   0144 71                  280 	ld	(hl),c
   0145 C9                  281 	ret
                            282 ;StateGame.c:56: void Update_STATE_GAME() {
                            283 ;	---------------------------------
                            284 ; Function Update_STATE_GAME
                            285 ; ---------------------------------
   0146                     286 _Update_STATE_GAME::
                            287 ;StateGame.c:57: if (KEY_PRESSED(J_START)) {
   0146 21r00r00            288 	ld	hl,#_keys
   0149 4E                  289 	ld	c,(hl)
   014A 06 00               290 	ld	b,#0x00
   014C CB 79               291 	bit	7, c
   014E C8                  292 	ret	Z
                            293 ;StateGame.c:58: SetState(STATE_GAME2);
   014F 3E 02               294 	ld	a,#0x02
   0151 F5                  295 	push	af
   0152 33                  296 	inc	sp
   0153 CDr00r00            297 	call	_SetState
   0156 33                  298 	inc	sp
   0157 C9                  299 	ret
                            300 	.area _CODE_2
                            301 	.area _CABS (ABS)
