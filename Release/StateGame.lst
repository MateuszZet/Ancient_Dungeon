                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.6.0 #9615 (MINGW64)
                              4 ;--------------------------------------------------------
                              5 	.module StateGame
                              6 	.optsdcc -mgbz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _SpriteManagerAdd
                             12 	.globl _SpriteManagerLoad
                             13 	.globl _InitScrollColor
                             14 	.globl _ZInitScrollTilesColor
                             15 	.globl _SetState
                             16 	.globl _collilision_tiles
                             17 	.globl _bank_STATE_GAME
                             18 	.globl _Start_STATE_GAME
                             19 	.globl _Update_STATE_GAME
                             20 ;--------------------------------------------------------
                             21 ; ram data
                             22 ;--------------------------------------------------------
                             23 	.area _DATA
   0000                      24 _bank_STATE_GAME::
   0000                      25 	.ds 1
   0001                      26 _collilision_tiles::
   0001                      27 	.ds 5
                             28 ;--------------------------------------------------------
                             29 ; absolute external ram data
                             30 ;--------------------------------------------------------
                             31 	.area _DABS (ABS)
                             32 ;--------------------------------------------------------
                             33 ; global & static initialisations
                             34 ;--------------------------------------------------------
                             35 	.area _HOME
                             36 	.area _GSINIT
                             37 	.area _GSFINAL
                             38 	.area _GSINIT
                             39 ;StateGame.c:3: UINT8 bank_STATE_GAME = 2;
   0000 21r00r00             40 	ld	hl,#_bank_STATE_GAME
   0003 36 02                41 	ld	(hl),#0x02
                             42 ;StateGame.c:14: UINT8 collilision_tiles[] = { 1,2,3,4,0 };
   0005 21r01r00             43 	ld	hl,#_collilision_tiles
   0008 36 01                44 	ld	(hl),#0x01
   000A 21r02r00             45 	ld	hl,#(_collilision_tiles + 0x0001)
   000D 36 02                46 	ld	(hl),#0x02
   000F 21r03r00             47 	ld	hl,#(_collilision_tiles + 0x0002)
   0012 36 03                48 	ld	(hl),#0x03
   0014 21r04r00             49 	ld	hl,#(_collilision_tiles + 0x0003)
   0017 36 04                50 	ld	(hl),#0x04
   0019 21r05r00             51 	ld	hl,#(_collilision_tiles + 0x0004)
   001C 36 00                52 	ld	(hl),#0x00
                             53 ;--------------------------------------------------------
                             54 ; Home
                             55 ;--------------------------------------------------------
                             56 	.area _HOME
                             57 	.area _HOME
                             58 ;--------------------------------------------------------
                             59 ; code
                             60 ;--------------------------------------------------------
                             61 	.area _CODE_2
                             62 ;StateGame.c:16: void Start_STATE_GAME() {
                             63 ;	---------------------------------
                             64 ; Function Start_STATE_GAME
                             65 ; ---------------------------------
   0000                      66 _Start_STATE_GAME::
                             67 ;StateGame.c:18: next_lvl=2;
   0000 21r00r00             68 	ld	hl,#_next_lvl
   0003 36 02                69 	ld	(hl),#0x02
   0005 23                   70 	inc	hl
   0006 36 00                71 	ld	(hl),#0x00
                             72 ;StateGame.c:19: NR52_REG = 0x80; //Enables sound, you should always setup this first
   0008 21 26 FF             73 	ld	hl,#0xff26
   000B 36 80                74 	ld	(hl),#0x80
                             75 ;StateGame.c:20: NR51_REG = 0xFF; //Enables all channels (left and right)
   000D 2E 25                76 	ld	l, #0x25
   000F 36 FF                77 	ld	(hl),#0xff
                             78 ;StateGame.c:21: NR50_REG = 0x77; //Max volume
   0011 2E 24                79 	ld	l, #0x24
   0013 36 77                80 	ld	(hl),#0x77
                             81 ;StateGame.c:23: SPRITES_8x16;
   0015 11 40 FF             82 	ld	de,#0xff40
   0018 1A                   83 	ld	a,(de)
   0019 4F                   84 	ld	c,a
   001A 06 00                85 	ld	b,#0x00
   001C 79                   86 	ld	a,c
   001D CB D7                87 	set	2, a
   001F 4F                   88 	ld	c,a
   0020 2E 40                89 	ld	l, #0x40
   0022 71                   90 	ld	(hl),c
                             91 ;StateGame.c:24: for(i = 0; i != n_sprite_types; ++ i) {
   0023 06 00                92 	ld	b,#0x00
   0025                      93 00110$:
   0025 21r00r00             94 	ld	hl,#_n_sprite_types
   0028 7E                   95 	ld	a,(hl)
   0029 90                   96 	sub	a, b
   002A 28 0B                97 	jr	Z,00101$
                             98 ;StateGame.c:25: SpriteManagerLoad(i);
   002C C5                   99 	push	bc
   002D C5                  100 	push	bc
   002E 33                  101 	inc	sp
   002F CDr00r00            102 	call	_SpriteManagerLoad
   0032 33                  103 	inc	sp
   0033 C1                  104 	pop	bc
                            105 ;StateGame.c:24: for(i = 0; i != n_sprite_types; ++ i) {
   0034 04                  106 	inc	b
   0035 18 EE               107 	jr	00110$
   0037                     108 00101$:
                            109 ;StateGame.c:27: SHOW_SPRITES;
   0037 11 40 FF            110 	ld	de,#0xff40
   003A 1A                  111 	ld	a,(de)
   003B 4F                  112 	ld	c,a
   003C 06 00               113 	ld	b,#0x00
   003E 79                  114 	ld	a,c
   003F CB CF               115 	set	1, a
   0041 4F                  116 	ld	c,a
   0042 21 40 FF            117 	ld	hl,#0xff40
   0045 71                  118 	ld	(hl),c
                            119 ;StateGame.c:29: if( have_diamond == 5){
   0046 21r00r00            120 	ld	hl,#_have_diamond
   0049 7E                  121 	ld	a,(hl)
   004A D6 05               122 	sub	a, #0x05
   004C 20 0F               123 	jr	NZ,00103$
   004E 23                  124 	inc	hl
   004F 7E                  125 	ld	a,(hl)
   0050 B7                  126 	or	a, a
   0051 20 0A               127 	jr	NZ,00103$
                            128 ;StateGame.c:30: have_bomb=0;
   0053 21r00r00            129 	ld	hl,#_have_bomb
   0056 36 00               130 	ld	(hl),#0x00
   0058 23                  131 	inc	hl
   0059 36 00               132 	ld	(hl),#0x00
   005B 18 08               133 	jr	00104$
   005D                     134 00103$:
                            135 ;StateGame.c:33: have_bomb = 4;
   005D 21r00r00            136 	ld	hl,#_have_bomb
   0060 36 04               137 	ld	(hl),#0x04
   0062 23                  138 	inc	hl
   0063 36 00               139 	ld	(hl),#0x00
   0065                     140 00104$:
                            141 ;StateGame.c:36: if( have_diamond == 0 || have_diamond == 3 ){
   0065 21r01r00            142 	ld	hl,#_have_diamond + 1
   0068 3A                  143 	ld	a,(hl-)
   0069 B6                  144 	or	a,(hl)
   006A 28 0C               145 	jr	Z,00105$
   006C 7E                  146 	ld	a,(hl)
   006D D6 03               147 	sub	a, #0x03
   006F C2r19r01            148 	jp	NZ,00106$
   0072 23                  149 	inc	hl
   0073 7E                  150 	ld	a,(hl)
   0074 B7                  151 	or	a, a
   0075 C2r19r01            152 	jp	NZ,00106$
   0078                     153 00105$:
                            154 ;StateGame.c:38: scroll_target = SpriteManagerAdd(SPRITE_PLAYER, 20, 100);
   0078 21 64 00            155 	ld	hl,#0x0064
   007B E5                  156 	push	hl
   007C 2E 14               157 	ld	l, #0x14
   007E E5                  158 	push	hl
   007F AF                  159 	xor	a, a
   0080 F5                  160 	push	af
   0081 33                  161 	inc	sp
   0082 CDr00r00            162 	call	_SpriteManagerAdd
   0085 E8 05               163 	add	sp, #5
   0087 21r00r00            164 	ld	hl,#_scroll_target
   008A 73                  165 	ld	(hl),e
   008B 23                  166 	inc	hl
   008C 72                  167 	ld	(hl),d
                            168 ;StateGame.c:39: door_x = 240;
   008D 21r00r00            169 	ld	hl,#_door_x
   0090 36 F0               170 	ld	(hl),#0xf0
   0092 23                  171 	inc	hl
   0093 36 00               172 	ld	(hl),#0x00
                            173 ;StateGame.c:40: door_y = 112;
   0095 21r00r00            174 	ld	hl,#_door_y
   0098 36 70               175 	ld	(hl),#0x70
   009A 23                  176 	inc	hl
   009B 36 00               177 	ld	(hl),#0x00
                            178 ;StateGame.c:42: SpriteManagerAdd(SPRITE_KEY, 288, 112);
   009D 21 70 00            179 	ld	hl,#0x0070
   00A0 E5                  180 	push	hl
   00A1 21 20 01            181 	ld	hl,#0x0120
   00A4 E5                  182 	push	hl
   00A5 3E 03               183 	ld	a,#0x03
   00A7 F5                  184 	push	af
   00A8 33                  185 	inc	sp
   00A9 CDr00r00            186 	call	_SpriteManagerAdd
   00AC E8 05               187 	add	sp, #5
                            188 ;StateGame.c:43: SpriteManagerAdd(SPRITE_DOOR, door_x, door_y);
   00AE 21r00r00            189 	ld	hl,#_door_y
   00B1 2A                  190 	ld	a,(hl+)
   00B2 66                  191 	ld	h,(hl)
   00B3 6F                  192 	ld	l,a
   00B4 E5                  193 	push	hl
   00B5 21r00r00            194 	ld	hl,#_door_x
   00B8 2A                  195 	ld	a,(hl+)
   00B9 66                  196 	ld	h,(hl)
   00BA 6F                  197 	ld	l,a
   00BB E5                  198 	push	hl
   00BC 3E 04               199 	ld	a,#0x04
   00BE F5                  200 	push	af
   00BF 33                  201 	inc	sp
   00C0 CDr00r00            202 	call	_SpriteManagerAdd
   00C3 E8 05               203 	add	sp, #5
                            204 ;StateGame.c:45: SpriteManagerAdd(SPRITE_ENEMY, 40, 32);
   00C5 21 20 00            205 	ld	hl,#0x0020
   00C8 E5                  206 	push	hl
   00C9 2E 28               207 	ld	l, #0x28
   00CB E5                  208 	push	hl
   00CC 3E 01               209 	ld	a,#0x01
   00CE F5                  210 	push	af
   00CF 33                  211 	inc	sp
   00D0 CDr00r00            212 	call	_SpriteManagerAdd
   00D3 E8 05               213 	add	sp, #5
                            214 ;StateGame.c:46: SpriteManagerAdd(SPRITE_ENEMY, 128, 80);
   00D5 21 50 00            215 	ld	hl,#0x0050
   00D8 E5                  216 	push	hl
   00D9 2E 80               217 	ld	l, #0x80
   00DB E5                  218 	push	hl
   00DC 3E 01               219 	ld	a,#0x01
   00DE F5                  220 	push	af
   00DF 33                  221 	inc	sp
   00E0 CDr00r00            222 	call	_SpriteManagerAdd
   00E3 E8 05               223 	add	sp, #5
                            224 ;StateGame.c:47: SpriteManagerAdd(SPRITE_ENEMY, 200, 112);
   00E5 21 70 00            225 	ld	hl,#0x0070
   00E8 E5                  226 	push	hl
   00E9 2E C8               227 	ld	l, #0xc8
   00EB E5                  228 	push	hl
   00EC 3E 01               229 	ld	a,#0x01
   00EE F5                  230 	push	af
   00EF 33                  231 	inc	sp
   00F0 CDr00r00            232 	call	_SpriteManagerAdd
   00F3 E8 05               233 	add	sp, #5
                            234 ;StateGame.c:48: SpriteManagerAdd(SPRITE_ENEMY, 288, 96);
   00F5 21 60 00            235 	ld	hl,#0x0060
   00F8 E5                  236 	push	hl
   00F9 21 20 01            237 	ld	hl,#0x0120
   00FC E5                  238 	push	hl
   00FD 3E 01               239 	ld	a,#0x01
   00FF F5                  240 	push	af
   0100 33                  241 	inc	sp
   0101 CDr00r00            242 	call	_SpriteManagerAdd
   0104 E8 05               243 	add	sp, #5
                            244 ;StateGame.c:49: SpriteManagerAdd(SPRITE_ENEMY3, 30, 30);	
   0106 21 1E 00            245 	ld	hl,#0x001e
   0109 E5                  246 	push	hl
   010A 2E 1E               247 	ld	l, #0x1e
   010C E5                  248 	push	hl
   010D 3E 08               249 	ld	a,#0x08
   010F F5                  250 	push	af
   0110 33                  251 	inc	sp
   0111 CDr00r00            252 	call	_SpriteManagerAdd
   0114 E8 05               253 	add	sp, #5
   0116 C3r66r01            254 	jp	00107$
   0119                     255 00106$:
                            256 ;StateGame.c:52: scroll_target = SpriteManagerAdd(SPRITE_PLAYER, 20, 100);
   0119 21 64 00            257 	ld	hl,#0x0064
   011C E5                  258 	push	hl
   011D 2E 14               259 	ld	l, #0x14
   011F E5                  260 	push	hl
   0120 AF                  261 	xor	a, a
   0121 F5                  262 	push	af
   0122 33                  263 	inc	sp
   0123 CDr00r00            264 	call	_SpriteManagerAdd
   0126 E8 05               265 	add	sp, #5
   0128 21r00r00            266 	ld	hl,#_scroll_target
   012B 73                  267 	ld	(hl),e
   012C 23                  268 	inc	hl
   012D 72                  269 	ld	(hl),d
                            270 ;StateGame.c:53: door_x = 240;
   012E 21r00r00            271 	ld	hl,#_door_x
   0131 36 F0               272 	ld	(hl),#0xf0
   0133 23                  273 	inc	hl
   0134 36 00               274 	ld	(hl),#0x00
                            275 ;StateGame.c:54: door_y = 112;
   0136 21r00r00            276 	ld	hl,#_door_y
   0139 36 70               277 	ld	(hl),#0x70
   013B 23                  278 	inc	hl
   013C 36 00               279 	ld	(hl),#0x00
                            280 ;StateGame.c:56: SpriteManagerAdd(SPRITE_KEY, 288, 112);
   013E 21 70 00            281 	ld	hl,#0x0070
   0141 E5                  282 	push	hl
   0142 21 20 01            283 	ld	hl,#0x0120
   0145 E5                  284 	push	hl
   0146 3E 03               285 	ld	a,#0x03
   0148 F5                  286 	push	af
   0149 33                  287 	inc	sp
   014A CDr00r00            288 	call	_SpriteManagerAdd
   014D E8 05               289 	add	sp, #5
                            290 ;StateGame.c:57: SpriteManagerAdd(SPRITE_DOOR, door_x, door_y);
   014F 21r00r00            291 	ld	hl,#_door_y
   0152 2A                  292 	ld	a,(hl+)
   0153 66                  293 	ld	h,(hl)
   0154 6F                  294 	ld	l,a
   0155 E5                  295 	push	hl
   0156 21r00r00            296 	ld	hl,#_door_x
   0159 2A                  297 	ld	a,(hl+)
   015A 66                  298 	ld	h,(hl)
   015B 6F                  299 	ld	l,a
   015C E5                  300 	push	hl
   015D 3E 04               301 	ld	a,#0x04
   015F F5                  302 	push	af
   0160 33                  303 	inc	sp
   0161 CDr00r00            304 	call	_SpriteManagerAdd
   0164 E8 05               305 	add	sp, #5
   0166                     306 00107$:
                            307 ;StateGame.c:60: InitScrollTiles(0, 59, tiles, 3);
   0166 21 00 00            308 	ld	hl,#0x0000
   0169 E5                  309 	push	hl
   016A 3E 03               310 	ld	a,#0x03
   016C F5                  311 	push	af
   016D 33                  312 	inc	sp
   016E 21r00r00            313 	ld	hl,#_tiles
   0171 E5                  314 	push	hl
   0172 21 00 3B            315 	ld	hl,#0x3b00
   0175 E5                  316 	push	hl
   0176 CDr00r00            317 	call	_ZInitScrollTilesColor
   0179 E8 07               318 	add	sp, #7
                            319 ;StateGame.c:61: InitScroll(mapWidth, mapHeight, map, collilision_tiles, 0, 3);
   017B 21 00 00            320 	ld	hl,#0x0000
   017E E5                  321 	push	hl
   017F 3E 03               322 	ld	a,#0x03
   0181 F5                  323 	push	af
   0182 33                  324 	inc	sp
   0183 2E 00               325 	ld	l, #0x00
   0185 E5                  326 	push	hl
   0186 21r01r00            327 	ld	hl,#_collilision_tiles
   0189 E5                  328 	push	hl
   018A 21r00r00            329 	ld	hl,#_map
   018D E5                  330 	push	hl
   018E 21 12 00            331 	ld	hl,#0x0012
   0191 E5                  332 	push	hl
   0192 2E 28               333 	ld	l, #0x28
   0194 E5                  334 	push	hl
   0195 CDr00r00            335 	call	_InitScrollColor
   0198 E8 0D               336 	add	sp, #13
                            337 ;StateGame.c:62: SHOW_BKG;
   019A 11 40 FF            338 	ld	de,#0xff40
   019D 1A                  339 	ld	a,(de)
   019E 4F                  340 	ld	c,a
   019F 06 00               341 	ld	b,#0x00
   01A1 79                  342 	ld	a,c
   01A2 CB C7               343 	set	0, a
   01A4 4F                  344 	ld	c,a
   01A5 21 40 FF            345 	ld	hl,#0xff40
   01A8 71                  346 	ld	(hl),c
   01A9 C9                  347 	ret
                            348 ;StateGame.c:65: void Update_STATE_GAME() {
                            349 ;	---------------------------------
                            350 ; Function Update_STATE_GAME
                            351 ; ---------------------------------
   01AA                     352 _Update_STATE_GAME::
                            353 ;StateGame.c:66: if (KEY_PRESSED(J_START)) {
   01AA 21r00r00            354 	ld	hl,#_keys
   01AD 4E                  355 	ld	c,(hl)
   01AE 06 00               356 	ld	b,#0x00
   01B0 CB 79               357 	bit	7, c
   01B2 C8                  358 	ret	Z
                            359 ;StateGame.c:67: SetState(STATE_GAME2);
   01B3 3E 02               360 	ld	a,#0x02
   01B5 F5                  361 	push	af
   01B6 33                  362 	inc	sp
   01B7 CDr00r00            363 	call	_SetState
   01BA 33                  364 	inc	sp
   01BB C9                  365 	ret
                            366 	.area _CODE_2
                            367 	.area _CABS (ABS)
