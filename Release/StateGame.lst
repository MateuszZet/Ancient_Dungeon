                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.6.0 #9615 (MINGW64)
                              4 ;--------------------------------------------------------
                              5 	.module StateGame
                              6 	.optsdcc -mgbz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _SpriteManagerAdd
                             12 	.globl _SpriteManagerLoad
                             13 	.globl _InitScrollColor
                             14 	.globl _ZInitScrollTilesColor
                             15 	.globl _SetState
                             16 	.globl _collilision_tiles
                             17 	.globl _bank_STATE_GAME
                             18 	.globl _Start_STATE_GAME
                             19 	.globl _Update_STATE_GAME
                             20 ;--------------------------------------------------------
                             21 ; ram data
                             22 ;--------------------------------------------------------
                             23 	.area _DATA
   0000                      24 _bank_STATE_GAME::
   0000                      25 	.ds 1
   0001                      26 _collilision_tiles::
   0001                      27 	.ds 5
                             28 ;--------------------------------------------------------
                             29 ; absolute external ram data
                             30 ;--------------------------------------------------------
                             31 	.area _DABS (ABS)
                             32 ;--------------------------------------------------------
                             33 ; global & static initialisations
                             34 ;--------------------------------------------------------
                             35 	.area _HOME
                             36 	.area _GSINIT
                             37 	.area _GSFINAL
                             38 	.area _GSINIT
                             39 ;StateGame.c:3: UINT8 bank_STATE_GAME = 2;
   0000 21r00r00             40 	ld	hl,#_bank_STATE_GAME
   0003 36 02                41 	ld	(hl),#0x02
                             42 ;StateGame.c:14: UINT8 collilision_tiles[] = { 1,2,3,4,0 };
   0005 21r01r00             43 	ld	hl,#_collilision_tiles
   0008 36 01                44 	ld	(hl),#0x01
   000A 21r02r00             45 	ld	hl,#(_collilision_tiles + 0x0001)
   000D 36 02                46 	ld	(hl),#0x02
   000F 21r03r00             47 	ld	hl,#(_collilision_tiles + 0x0002)
   0012 36 03                48 	ld	(hl),#0x03
   0014 21r04r00             49 	ld	hl,#(_collilision_tiles + 0x0003)
   0017 36 04                50 	ld	(hl),#0x04
   0019 21r05r00             51 	ld	hl,#(_collilision_tiles + 0x0004)
   001C 36 00                52 	ld	(hl),#0x00
                             53 ;--------------------------------------------------------
                             54 ; Home
                             55 ;--------------------------------------------------------
                             56 	.area _HOME
                             57 	.area _HOME
                             58 ;--------------------------------------------------------
                             59 ; code
                             60 ;--------------------------------------------------------
                             61 	.area _CODE_2
                             62 ;StateGame.c:16: void Start_STATE_GAME() {
                             63 ;	---------------------------------
                             64 ; Function Start_STATE_GAME
                             65 ; ---------------------------------
   0000                      66 _Start_STATE_GAME::
                             67 ;StateGame.c:18: next_lvl=2;
   0000 21r00r00             68 	ld	hl,#_next_lvl
   0003 36 02                69 	ld	(hl),#0x02
   0005 23                   70 	inc	hl
   0006 36 00                71 	ld	(hl),#0x00
                             72 ;StateGame.c:19: NR52_REG = 0x80; //Enables sound, you should always setup this first
   0008 21 26 FF             73 	ld	hl,#0xff26
   000B 36 80                74 	ld	(hl),#0x80
                             75 ;StateGame.c:20: NR51_REG = 0xFF; //Enables all channels (left and right)
   000D 2E 25                76 	ld	l, #0x25
   000F 36 FF                77 	ld	(hl),#0xff
                             78 ;StateGame.c:21: NR50_REG = 0x77; //Max volume
   0011 2E 24                79 	ld	l, #0x24
   0013 36 77                80 	ld	(hl),#0x77
                             81 ;StateGame.c:23: SPRITES_8x16;
   0015 11 40 FF             82 	ld	de,#0xff40
   0018 1A                   83 	ld	a,(de)
   0019 4F                   84 	ld	c,a
   001A 06 00                85 	ld	b,#0x00
   001C 79                   86 	ld	a,c
   001D CB D7                87 	set	2, a
   001F 4F                   88 	ld	c,a
   0020 2E 40                89 	ld	l, #0x40
   0022 71                   90 	ld	(hl),c
                             91 ;StateGame.c:24: for(i = 0; i != n_sprite_types; ++ i) {
   0023 06 00                92 	ld	b,#0x00
   0025                      93 00110$:
   0025 21r00r00             94 	ld	hl,#_n_sprite_types
   0028 7E                   95 	ld	a,(hl)
   0029 90                   96 	sub	a, b
   002A 28 0B                97 	jr	Z,00101$
                             98 ;StateGame.c:25: SpriteManagerLoad(i);
   002C C5                   99 	push	bc
   002D C5                  100 	push	bc
   002E 33                  101 	inc	sp
   002F CDr00r00            102 	call	_SpriteManagerLoad
   0032 33                  103 	inc	sp
   0033 C1                  104 	pop	bc
                            105 ;StateGame.c:24: for(i = 0; i != n_sprite_types; ++ i) {
   0034 04                  106 	inc	b
   0035 18 EE               107 	jr	00110$
   0037                     108 00101$:
                            109 ;StateGame.c:27: SHOW_SPRITES;
   0037 11 40 FF            110 	ld	de,#0xff40
   003A 1A                  111 	ld	a,(de)
   003B 4F                  112 	ld	c,a
   003C 06 00               113 	ld	b,#0x00
   003E 79                  114 	ld	a,c
   003F CB CF               115 	set	1, a
   0041 4F                  116 	ld	c,a
   0042 21 40 FF            117 	ld	hl,#0xff40
   0045 71                  118 	ld	(hl),c
                            119 ;StateGame.c:29: if( have_diamond == 5){
   0046 21r00r00            120 	ld	hl,#_have_diamond
   0049 7E                  121 	ld	a,(hl)
   004A D6 05               122 	sub	a, #0x05
   004C 20 09               123 	jr	NZ,00132$
   004E 23                  124 	inc	hl
   004F 7E                  125 	ld	a,(hl)
   0050 B7                  126 	or	a, a
   0051 20 04               127 	jr	NZ,00132$
   0053 3E 01               128 	ld	a,#0x01
   0055 18 01               129 	jr	00133$
   0057                     130 00132$:
   0057 AF                  131 	xor	a,a
   0058                     132 00133$:
   0058 4F                  133 	ld	c,a
   0059 B7                  134 	or	a, a
   005A 28 0A               135 	jr	Z,00103$
                            136 ;StateGame.c:30: have_bomb=0;
   005C 21r00r00            137 	ld	hl,#_have_bomb
   005F 36 00               138 	ld	(hl),#0x00
   0061 23                  139 	inc	hl
   0062 36 00               140 	ld	(hl),#0x00
   0064 18 08               141 	jr	00104$
   0066                     142 00103$:
                            143 ;StateGame.c:33: have_bomb = 4;
   0066 21r00r00            144 	ld	hl,#_have_bomb
   0069 36 04               145 	ld	(hl),#0x04
   006B 23                  146 	inc	hl
   006C 36 00               147 	ld	(hl),#0x00
   006E                     148 00104$:
                            149 ;StateGame.c:36: if( have_diamond == 0 || have_diamond == 5 ){
   006E 21r01r00            150 	ld	hl,#_have_diamond + 1
   0071 3A                  151 	ld	a,(hl-)
   0072 B6                  152 	or	a,(hl)
   0073 28 05               153 	jr	Z,00105$
   0075 79                  154 	ld	a,c
   0076 B7                  155 	or	a, a
   0077 CAr1Br01            156 	jp	Z,00106$
   007A                     157 00105$:
                            158 ;StateGame.c:38: scroll_target = SpriteManagerAdd(SPRITE_PLAYER, 20, 100);
   007A 21 64 00            159 	ld	hl,#0x0064
   007D E5                  160 	push	hl
   007E 2E 14               161 	ld	l, #0x14
   0080 E5                  162 	push	hl
   0081 AF                  163 	xor	a, a
   0082 F5                  164 	push	af
   0083 33                  165 	inc	sp
   0084 CDr00r00            166 	call	_SpriteManagerAdd
   0087 E8 05               167 	add	sp, #5
   0089 21r00r00            168 	ld	hl,#_scroll_target
   008C 73                  169 	ld	(hl),e
   008D 23                  170 	inc	hl
   008E 72                  171 	ld	(hl),d
                            172 ;StateGame.c:39: door_x = 240;
   008F 21r00r00            173 	ld	hl,#_door_x
   0092 36 F0               174 	ld	(hl),#0xf0
   0094 23                  175 	inc	hl
   0095 36 00               176 	ld	(hl),#0x00
                            177 ;StateGame.c:40: door_y = 112;
   0097 21r00r00            178 	ld	hl,#_door_y
   009A 36 70               179 	ld	(hl),#0x70
   009C 23                  180 	inc	hl
   009D 36 00               181 	ld	(hl),#0x00
                            182 ;StateGame.c:42: SpriteManagerAdd(SPRITE_KEY, 288, 112);
   009F 21 70 00            183 	ld	hl,#0x0070
   00A2 E5                  184 	push	hl
   00A3 21 20 01            185 	ld	hl,#0x0120
   00A6 E5                  186 	push	hl
   00A7 3E 03               187 	ld	a,#0x03
   00A9 F5                  188 	push	af
   00AA 33                  189 	inc	sp
   00AB CDr00r00            190 	call	_SpriteManagerAdd
   00AE E8 05               191 	add	sp, #5
                            192 ;StateGame.c:43: SpriteManagerAdd(SPRITE_DOOR, door_x, door_y);
   00B0 21r00r00            193 	ld	hl,#_door_y
   00B3 2A                  194 	ld	a,(hl+)
   00B4 66                  195 	ld	h,(hl)
   00B5 6F                  196 	ld	l,a
   00B6 E5                  197 	push	hl
   00B7 21r00r00            198 	ld	hl,#_door_x
   00BA 2A                  199 	ld	a,(hl+)
   00BB 66                  200 	ld	h,(hl)
   00BC 6F                  201 	ld	l,a
   00BD E5                  202 	push	hl
   00BE 3E 04               203 	ld	a,#0x04
   00C0 F5                  204 	push	af
   00C1 33                  205 	inc	sp
   00C2 CDr00r00            206 	call	_SpriteManagerAdd
   00C5 E8 05               207 	add	sp, #5
                            208 ;StateGame.c:45: SpriteManagerAdd(SPRITE_ENEMY, 40, 32);
   00C7 21 20 00            209 	ld	hl,#0x0020
   00CA E5                  210 	push	hl
   00CB 2E 28               211 	ld	l, #0x28
   00CD E5                  212 	push	hl
   00CE 3E 01               213 	ld	a,#0x01
   00D0 F5                  214 	push	af
   00D1 33                  215 	inc	sp
   00D2 CDr00r00            216 	call	_SpriteManagerAdd
   00D5 E8 05               217 	add	sp, #5
                            218 ;StateGame.c:46: SpriteManagerAdd(SPRITE_ENEMY, 128, 80);
   00D7 21 50 00            219 	ld	hl,#0x0050
   00DA E5                  220 	push	hl
   00DB 2E 80               221 	ld	l, #0x80
   00DD E5                  222 	push	hl
   00DE 3E 01               223 	ld	a,#0x01
   00E0 F5                  224 	push	af
   00E1 33                  225 	inc	sp
   00E2 CDr00r00            226 	call	_SpriteManagerAdd
   00E5 E8 05               227 	add	sp, #5
                            228 ;StateGame.c:47: SpriteManagerAdd(SPRITE_ENEMY, 200, 112);
   00E7 21 70 00            229 	ld	hl,#0x0070
   00EA E5                  230 	push	hl
   00EB 2E C8               231 	ld	l, #0xc8
   00ED E5                  232 	push	hl
   00EE 3E 01               233 	ld	a,#0x01
   00F0 F5                  234 	push	af
   00F1 33                  235 	inc	sp
   00F2 CDr00r00            236 	call	_SpriteManagerAdd
   00F5 E8 05               237 	add	sp, #5
                            238 ;StateGame.c:48: SpriteManagerAdd(SPRITE_ENEMY, 288, 96);
   00F7 21 60 00            239 	ld	hl,#0x0060
   00FA E5                  240 	push	hl
   00FB 21 20 01            241 	ld	hl,#0x0120
   00FE E5                  242 	push	hl
   00FF 3E 01               243 	ld	a,#0x01
   0101 F5                  244 	push	af
   0102 33                  245 	inc	sp
   0103 CDr00r00            246 	call	_SpriteManagerAdd
   0106 E8 05               247 	add	sp, #5
                            248 ;StateGame.c:49: SpriteManagerAdd(SPRITE_ENEMY3, 30, 30);	
   0108 21 1E 00            249 	ld	hl,#0x001e
   010B E5                  250 	push	hl
   010C 2E 1E               251 	ld	l, #0x1e
   010E E5                  252 	push	hl
   010F 3E 08               253 	ld	a,#0x08
   0111 F5                  254 	push	af
   0112 33                  255 	inc	sp
   0113 CDr00r00            256 	call	_SpriteManagerAdd
   0116 E8 05               257 	add	sp, #5
   0118 C3r68r01            258 	jp	00107$
   011B                     259 00106$:
                            260 ;StateGame.c:52: scroll_target = SpriteManagerAdd(SPRITE_PLAYER, 20, 100);
   011B 21 64 00            261 	ld	hl,#0x0064
   011E E5                  262 	push	hl
   011F 2E 14               263 	ld	l, #0x14
   0121 E5                  264 	push	hl
   0122 AF                  265 	xor	a, a
   0123 F5                  266 	push	af
   0124 33                  267 	inc	sp
   0125 CDr00r00            268 	call	_SpriteManagerAdd
   0128 E8 05               269 	add	sp, #5
   012A 21r00r00            270 	ld	hl,#_scroll_target
   012D 73                  271 	ld	(hl),e
   012E 23                  272 	inc	hl
   012F 72                  273 	ld	(hl),d
                            274 ;StateGame.c:53: door_x = 240;
   0130 21r00r00            275 	ld	hl,#_door_x
   0133 36 F0               276 	ld	(hl),#0xf0
   0135 23                  277 	inc	hl
   0136 36 00               278 	ld	(hl),#0x00
                            279 ;StateGame.c:54: door_y = 112;
   0138 21r00r00            280 	ld	hl,#_door_y
   013B 36 70               281 	ld	(hl),#0x70
   013D 23                  282 	inc	hl
   013E 36 00               283 	ld	(hl),#0x00
                            284 ;StateGame.c:56: SpriteManagerAdd(SPRITE_KEY, 288, 112);
   0140 21 70 00            285 	ld	hl,#0x0070
   0143 E5                  286 	push	hl
   0144 21 20 01            287 	ld	hl,#0x0120
   0147 E5                  288 	push	hl
   0148 3E 03               289 	ld	a,#0x03
   014A F5                  290 	push	af
   014B 33                  291 	inc	sp
   014C CDr00r00            292 	call	_SpriteManagerAdd
   014F E8 05               293 	add	sp, #5
                            294 ;StateGame.c:57: SpriteManagerAdd(SPRITE_DOOR, door_x, door_y);
   0151 21r00r00            295 	ld	hl,#_door_y
   0154 2A                  296 	ld	a,(hl+)
   0155 66                  297 	ld	h,(hl)
   0156 6F                  298 	ld	l,a
   0157 E5                  299 	push	hl
   0158 21r00r00            300 	ld	hl,#_door_x
   015B 2A                  301 	ld	a,(hl+)
   015C 66                  302 	ld	h,(hl)
   015D 6F                  303 	ld	l,a
   015E E5                  304 	push	hl
   015F 3E 04               305 	ld	a,#0x04
   0161 F5                  306 	push	af
   0162 33                  307 	inc	sp
   0163 CDr00r00            308 	call	_SpriteManagerAdd
   0166 E8 05               309 	add	sp, #5
   0168                     310 00107$:
                            311 ;StateGame.c:60: InitScrollTiles(0, 59, tiles, 3);
   0168 21 00 00            312 	ld	hl,#0x0000
   016B E5                  313 	push	hl
   016C 3E 03               314 	ld	a,#0x03
   016E F5                  315 	push	af
   016F 33                  316 	inc	sp
   0170 21r00r00            317 	ld	hl,#_tiles
   0173 E5                  318 	push	hl
   0174 21 00 3B            319 	ld	hl,#0x3b00
   0177 E5                  320 	push	hl
   0178 CDr00r00            321 	call	_ZInitScrollTilesColor
   017B E8 07               322 	add	sp, #7
                            323 ;StateGame.c:61: InitScroll(mapWidth, mapHeight, map, collilision_tiles, 0, 3);
   017D 21 00 00            324 	ld	hl,#0x0000
   0180 E5                  325 	push	hl
   0181 3E 03               326 	ld	a,#0x03
   0183 F5                  327 	push	af
   0184 33                  328 	inc	sp
   0185 2E 00               329 	ld	l, #0x00
   0187 E5                  330 	push	hl
   0188 21r01r00            331 	ld	hl,#_collilision_tiles
   018B E5                  332 	push	hl
   018C 21r00r00            333 	ld	hl,#_map
   018F E5                  334 	push	hl
   0190 21 12 00            335 	ld	hl,#0x0012
   0193 E5                  336 	push	hl
   0194 2E 28               337 	ld	l, #0x28
   0196 E5                  338 	push	hl
   0197 CDr00r00            339 	call	_InitScrollColor
   019A E8 0D               340 	add	sp, #13
                            341 ;StateGame.c:62: SHOW_BKG;
   019C 11 40 FF            342 	ld	de,#0xff40
   019F 1A                  343 	ld	a,(de)
   01A0 4F                  344 	ld	c,a
   01A1 06 00               345 	ld	b,#0x00
   01A3 79                  346 	ld	a,c
   01A4 CB C7               347 	set	0, a
   01A6 4F                  348 	ld	c,a
   01A7 21 40 FF            349 	ld	hl,#0xff40
   01AA 71                  350 	ld	(hl),c
   01AB C9                  351 	ret
                            352 ;StateGame.c:65: void Update_STATE_GAME() {
                            353 ;	---------------------------------
                            354 ; Function Update_STATE_GAME
                            355 ; ---------------------------------
   01AC                     356 _Update_STATE_GAME::
                            357 ;StateGame.c:66: if (KEY_PRESSED(J_START)) {
   01AC 21r00r00            358 	ld	hl,#_keys
   01AF 4E                  359 	ld	c,(hl)
   01B0 06 00               360 	ld	b,#0x00
   01B2 CB 79               361 	bit	7, c
   01B4 C8                  362 	ret	Z
                            363 ;StateGame.c:67: SetState(STATE_GAME2);
   01B5 3E 02               364 	ld	a,#0x02
   01B7 F5                  365 	push	af
   01B8 33                  366 	inc	sp
   01B9 CDr00r00            367 	call	_SetState
   01BC 33                  368 	inc	sp
   01BD C9                  369 	ret
                            370 	.area _CODE_2
                            371 	.area _CABS (ABS)
