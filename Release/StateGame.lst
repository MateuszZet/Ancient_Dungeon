                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.6.0 #9615 (MINGW64)
                              4 ;--------------------------------------------------------
                              5 	.module StateGame
                              6 	.optsdcc -mgbz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _SpriteManagerAdd
                             12 	.globl _SpriteManagerLoad
                             13 	.globl _InitScrollColor
                             14 	.globl _ZInitScrollTilesColor
                             15 	.globl _SetState
                             16 	.globl _collilision_tiles
                             17 	.globl _bank_STATE_GAME
                             18 	.globl _Start_STATE_GAME
                             19 	.globl _Update_STATE_GAME
                             20 ;--------------------------------------------------------
                             21 ; ram data
                             22 ;--------------------------------------------------------
                             23 	.area _DATA
   0000                      24 _bank_STATE_GAME::
   0000                      25 	.ds 1
   0001                      26 _collilision_tiles::
   0001                      27 	.ds 5
                             28 ;--------------------------------------------------------
                             29 ; absolute external ram data
                             30 ;--------------------------------------------------------
                             31 	.area _DABS (ABS)
                             32 ;--------------------------------------------------------
                             33 ; global & static initialisations
                             34 ;--------------------------------------------------------
                             35 	.area _HOME
                             36 	.area _GSINIT
                             37 	.area _GSFINAL
                             38 	.area _GSINIT
                             39 ;StateGame.c:3: UINT8 bank_STATE_GAME = 2;
   0000 21r00r00             40 	ld	hl,#_bank_STATE_GAME
   0003 36 02                41 	ld	(hl),#0x02
                             42 ;StateGame.c:15: UINT8 collilision_tiles[] = { 1,2,3,4,0 };
   0005 21r01r00             43 	ld	hl,#_collilision_tiles
   0008 36 01                44 	ld	(hl),#0x01
   000A 21r02r00             45 	ld	hl,#(_collilision_tiles + 0x0001)
   000D 36 02                46 	ld	(hl),#0x02
   000F 21r03r00             47 	ld	hl,#(_collilision_tiles + 0x0002)
   0012 36 03                48 	ld	(hl),#0x03
   0014 21r04r00             49 	ld	hl,#(_collilision_tiles + 0x0003)
   0017 36 04                50 	ld	(hl),#0x04
   0019 21r05r00             51 	ld	hl,#(_collilision_tiles + 0x0004)
   001C 36 00                52 	ld	(hl),#0x00
                             53 ;--------------------------------------------------------
                             54 ; Home
                             55 ;--------------------------------------------------------
                             56 	.area _HOME
                             57 	.area _HOME
                             58 ;--------------------------------------------------------
                             59 ; code
                             60 ;--------------------------------------------------------
                             61 	.area _CODE_2
                             62 ;StateGame.c:17: void Start_STATE_GAME() {
                             63 ;	---------------------------------
                             64 ; Function Start_STATE_GAME
                             65 ; ---------------------------------
   0000                      66 _Start_STATE_GAME::
                             67 ;StateGame.c:19: next_lvl=2;
   0000 21r00r00             68 	ld	hl,#_next_lvl
   0003 36 02                69 	ld	(hl),#0x02
   0005 23                   70 	inc	hl
   0006 36 00                71 	ld	(hl),#0x00
                             72 ;StateGame.c:20: NR52_REG = 0x80; //Enables sound, you should always setup this first
   0008 21 26 FF             73 	ld	hl,#0xff26
   000B 36 80                74 	ld	(hl),#0x80
                             75 ;StateGame.c:21: NR51_REG = 0xFF; //Enables all channels (left and right)
   000D 2E 25                76 	ld	l, #0x25
   000F 36 FF                77 	ld	(hl),#0xff
                             78 ;StateGame.c:22: NR50_REG = 0x77; //Max volume
   0011 2E 24                79 	ld	l, #0x24
   0013 36 77                80 	ld	(hl),#0x77
                             81 ;StateGame.c:24: SPRITES_8x16;
   0015 11 40 FF             82 	ld	de,#0xff40
   0018 1A                   83 	ld	a,(de)
   0019 4F                   84 	ld	c,a
   001A 06 00                85 	ld	b,#0x00
   001C 79                   86 	ld	a,c
   001D CB D7                87 	set	2, a
   001F 4F                   88 	ld	c,a
   0020 2E 40                89 	ld	l, #0x40
   0022 71                   90 	ld	(hl),c
                             91 ;StateGame.c:25: for(i = 0; i != n_sprite_types; ++ i) {
   0023 06 00                92 	ld	b,#0x00
   0025                      93 00103$:
   0025 21r00r00             94 	ld	hl,#_n_sprite_types
   0028 7E                   95 	ld	a,(hl)
   0029 90                   96 	sub	a, b
   002A 28 0B                97 	jr	Z,00101$
                             98 ;StateGame.c:26: SpriteManagerLoad(i);
   002C C5                   99 	push	bc
   002D C5                  100 	push	bc
   002E 33                  101 	inc	sp
   002F CDr00r00            102 	call	_SpriteManagerLoad
   0032 33                  103 	inc	sp
   0033 C1                  104 	pop	bc
                            105 ;StateGame.c:25: for(i = 0; i != n_sprite_types; ++ i) {
   0034 04                  106 	inc	b
   0035 18 EE               107 	jr	00103$
   0037                     108 00101$:
                            109 ;StateGame.c:28: SHOW_SPRITES;
   0037 11 40 FF            110 	ld	de,#0xff40
   003A 1A                  111 	ld	a,(de)
   003B 4F                  112 	ld	c,a
   003C 06 00               113 	ld	b,#0x00
   003E 79                  114 	ld	a,c
   003F CB CF               115 	set	1, a
   0041 4F                  116 	ld	c,a
   0042 21 40 FF            117 	ld	hl,#0xff40
   0045 71                  118 	ld	(hl),c
                            119 ;StateGame.c:30: scroll_target = SpriteManagerAdd(SPRITE_PLAYER, 20, 100);
   0046 21 64 00            120 	ld	hl,#0x0064
   0049 E5                  121 	push	hl
   004A 2E 14               122 	ld	l, #0x14
   004C E5                  123 	push	hl
   004D AF                  124 	xor	a, a
   004E F5                  125 	push	af
   004F 33                  126 	inc	sp
   0050 CDr00r00            127 	call	_SpriteManagerAdd
   0053 E8 05               128 	add	sp, #5
   0055 21r00r00            129 	ld	hl,#_scroll_target
   0058 73                  130 	ld	(hl),e
   0059 23                  131 	inc	hl
   005A 72                  132 	ld	(hl),d
                            133 ;StateGame.c:32: door_x = 240;
   005B 21r00r00            134 	ld	hl,#_door_x
   005E 36 F0               135 	ld	(hl),#0xf0
   0060 23                  136 	inc	hl
   0061 36 00               137 	ld	(hl),#0x00
                            138 ;StateGame.c:33: door_y = 112;
   0063 21r00r00            139 	ld	hl,#_door_y
   0066 36 70               140 	ld	(hl),#0x70
   0068 23                  141 	inc	hl
   0069 36 00               142 	ld	(hl),#0x00
                            143 ;StateGame.c:34: have_bomb = 4;
   006B 21r00r00            144 	ld	hl,#_have_bomb
   006E 36 04               145 	ld	(hl),#0x04
   0070 23                  146 	inc	hl
   0071 36 00               147 	ld	(hl),#0x00
                            148 ;StateGame.c:35: SpriteManagerAdd(SPRITE_KEY, 288, 112);
   0073 21 70 00            149 	ld	hl,#0x0070
   0076 E5                  150 	push	hl
   0077 21 20 01            151 	ld	hl,#0x0120
   007A E5                  152 	push	hl
   007B 3E 03               153 	ld	a,#0x03
   007D F5                  154 	push	af
   007E 33                  155 	inc	sp
   007F CDr00r00            156 	call	_SpriteManagerAdd
   0082 E8 05               157 	add	sp, #5
                            158 ;StateGame.c:36: SpriteManagerAdd(SPRITE_DOOR, door_x, door_y);
   0084 21r00r00            159 	ld	hl,#_door_y
   0087 2A                  160 	ld	a,(hl+)
   0088 66                  161 	ld	h,(hl)
   0089 6F                  162 	ld	l,a
   008A E5                  163 	push	hl
   008B 21r00r00            164 	ld	hl,#_door_x
   008E 2A                  165 	ld	a,(hl+)
   008F 66                  166 	ld	h,(hl)
   0090 6F                  167 	ld	l,a
   0091 E5                  168 	push	hl
   0092 3E 04               169 	ld	a,#0x04
   0094 F5                  170 	push	af
   0095 33                  171 	inc	sp
   0096 CDr00r00            172 	call	_SpriteManagerAdd
   0099 E8 05               173 	add	sp, #5
                            174 ;StateGame.c:38: SpriteManagerAdd(SPRITE_ENEMY, 40, 32);
   009B 21 20 00            175 	ld	hl,#0x0020
   009E E5                  176 	push	hl
   009F 2E 28               177 	ld	l, #0x28
   00A1 E5                  178 	push	hl
   00A2 3E 01               179 	ld	a,#0x01
   00A4 F5                  180 	push	af
   00A5 33                  181 	inc	sp
   00A6 CDr00r00            182 	call	_SpriteManagerAdd
   00A9 E8 05               183 	add	sp, #5
                            184 ;StateGame.c:39: SpriteManagerAdd(SPRITE_ENEMY, 128, 80);
   00AB 21 50 00            185 	ld	hl,#0x0050
   00AE E5                  186 	push	hl
   00AF 2E 80               187 	ld	l, #0x80
   00B1 E5                  188 	push	hl
   00B2 3E 01               189 	ld	a,#0x01
   00B4 F5                  190 	push	af
   00B5 33                  191 	inc	sp
   00B6 CDr00r00            192 	call	_SpriteManagerAdd
   00B9 E8 05               193 	add	sp, #5
                            194 ;StateGame.c:40: SpriteManagerAdd(SPRITE_ENEMY, 200, 112);
   00BB 21 70 00            195 	ld	hl,#0x0070
   00BE E5                  196 	push	hl
   00BF 2E C8               197 	ld	l, #0xc8
   00C1 E5                  198 	push	hl
   00C2 3E 01               199 	ld	a,#0x01
   00C4 F5                  200 	push	af
   00C5 33                  201 	inc	sp
   00C6 CDr00r00            202 	call	_SpriteManagerAdd
   00C9 E8 05               203 	add	sp, #5
                            204 ;StateGame.c:41: SpriteManagerAdd(SPRITE_ENEMY, 288, 96);
   00CB 21 60 00            205 	ld	hl,#0x0060
   00CE E5                  206 	push	hl
   00CF 21 20 01            207 	ld	hl,#0x0120
   00D2 E5                  208 	push	hl
   00D3 3E 01               209 	ld	a,#0x01
   00D5 F5                  210 	push	af
   00D6 33                  211 	inc	sp
   00D7 CDr00r00            212 	call	_SpriteManagerAdd
   00DA E8 05               213 	add	sp, #5
                            214 ;StateGame.c:42: SpriteManagerAdd(SPRITE_ENEMY3, 30, 30);
   00DC 21 1E 00            215 	ld	hl,#0x001e
   00DF E5                  216 	push	hl
   00E0 2E 1E               217 	ld	l, #0x1e
   00E2 E5                  218 	push	hl
   00E3 3E 08               219 	ld	a,#0x08
   00E5 F5                  220 	push	af
   00E6 33                  221 	inc	sp
   00E7 CDr00r00            222 	call	_SpriteManagerAdd
   00EA E8 05               223 	add	sp, #5
                            224 ;StateGame.c:44: InitScrollTiles(0, 59, tiles, 3);
   00EC 21 00 00            225 	ld	hl,#0x0000
   00EF E5                  226 	push	hl
   00F0 3E 03               227 	ld	a,#0x03
   00F2 F5                  228 	push	af
   00F3 33                  229 	inc	sp
   00F4 21r00r00            230 	ld	hl,#_tiles
   00F7 E5                  231 	push	hl
   00F8 21 00 3B            232 	ld	hl,#0x3b00
   00FB E5                  233 	push	hl
   00FC CDr00r00            234 	call	_ZInitScrollTilesColor
   00FF E8 07               235 	add	sp, #7
                            236 ;StateGame.c:45: InitScroll(mapWidth, mapHeight, map, collilision_tiles, 0, 3);
   0101 21 00 00            237 	ld	hl,#0x0000
   0104 E5                  238 	push	hl
   0105 3E 03               239 	ld	a,#0x03
   0107 F5                  240 	push	af
   0108 33                  241 	inc	sp
   0109 2E 00               242 	ld	l, #0x00
   010B E5                  243 	push	hl
   010C 21r01r00            244 	ld	hl,#_collilision_tiles
   010F E5                  245 	push	hl
   0110 21r00r00            246 	ld	hl,#_map
   0113 E5                  247 	push	hl
   0114 21 12 00            248 	ld	hl,#0x0012
   0117 E5                  249 	push	hl
   0118 2E 28               250 	ld	l, #0x28
   011A E5                  251 	push	hl
   011B CDr00r00            252 	call	_InitScrollColor
   011E E8 0D               253 	add	sp, #13
                            254 ;StateGame.c:46: SHOW_BKG;
   0120 11 40 FF            255 	ld	de,#0xff40
   0123 1A                  256 	ld	a,(de)
   0124 4F                  257 	ld	c,a
   0125 06 00               258 	ld	b,#0x00
   0127 79                  259 	ld	a,c
   0128 CB C7               260 	set	0, a
   012A 4F                  261 	ld	c,a
   012B 21 40 FF            262 	ld	hl,#0xff40
   012E 71                  263 	ld	(hl),c
   012F C9                  264 	ret
                            265 ;StateGame.c:51: void Update_STATE_GAME() {
                            266 ;	---------------------------------
                            267 ; Function Update_STATE_GAME
                            268 ; ---------------------------------
   0130                     269 _Update_STATE_GAME::
                            270 ;StateGame.c:52: if (KEY_PRESSED(J_START)) {
   0130 21r00r00            271 	ld	hl,#_keys
   0133 4E                  272 	ld	c,(hl)
   0134 06 00               273 	ld	b,#0x00
   0136 CB 79               274 	bit	7, c
   0138 C8                  275 	ret	Z
                            276 ;StateGame.c:53: SetState(STATE_GAME2);
   0139 3E 02               277 	ld	a,#0x02
   013B F5                  278 	push	af
   013C 33                  279 	inc	sp
   013D CDr00r00            280 	call	_SetState
   0140 33                  281 	inc	sp
   0141 C9                  282 	ret
                            283 	.area _CODE_2
                            284 	.area _CABS (ABS)
