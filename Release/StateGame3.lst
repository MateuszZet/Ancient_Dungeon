                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.6.0 #9615 (MINGW64)
                              4 ;--------------------------------------------------------
                              5 	.module StateGame3
                              6 	.optsdcc -mgbz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _SpriteManagerAdd
                             12 	.globl _SpriteManagerLoad
                             13 	.globl _InitScrollColor
                             14 	.globl _ZInitScrollTilesColor
                             15 	.globl _SetState
                             16 	.globl _collilision_tiles3
                             17 	.globl _bank_STATE_GAME3
                             18 	.globl _Start_STATE_GAME3
                             19 	.globl _Update_STATE_GAME3
                             20 ;--------------------------------------------------------
                             21 ; ram data
                             22 ;--------------------------------------------------------
                             23 	.area _DATA
   0000                      24 _bank_STATE_GAME3::
   0000                      25 	.ds 1
   0001                      26 _collilision_tiles3::
   0001                      27 	.ds 5
                             28 ;--------------------------------------------------------
                             29 ; absolute external ram data
                             30 ;--------------------------------------------------------
                             31 	.area _DABS (ABS)
                             32 ;--------------------------------------------------------
                             33 ; global & static initialisations
                             34 ;--------------------------------------------------------
                             35 	.area _HOME
                             36 	.area _GSINIT
                             37 	.area _GSFINAL
                             38 	.area _GSINIT
                             39 ;StateGame3.c:3: UINT8 bank_STATE_GAME3 = 2;
   0000 21r00r00             40 	ld	hl,#_bank_STATE_GAME3
   0003 36 02                41 	ld	(hl),#0x02
                             42 ;StateGame3.c:14: UINT8 collilision_tiles3[] = { 1,2,3,4,0 };
   0005 21r01r00             43 	ld	hl,#_collilision_tiles3
   0008 36 01                44 	ld	(hl),#0x01
   000A 21r02r00             45 	ld	hl,#(_collilision_tiles3 + 0x0001)
   000D 36 02                46 	ld	(hl),#0x02
   000F 21r03r00             47 	ld	hl,#(_collilision_tiles3 + 0x0002)
   0012 36 03                48 	ld	(hl),#0x03
   0014 21r04r00             49 	ld	hl,#(_collilision_tiles3 + 0x0003)
   0017 36 04                50 	ld	(hl),#0x04
   0019 21r05r00             51 	ld	hl,#(_collilision_tiles3 + 0x0004)
   001C 36 00                52 	ld	(hl),#0x00
                             53 ;--------------------------------------------------------
                             54 ; Home
                             55 ;--------------------------------------------------------
                             56 	.area _HOME
                             57 	.area _HOME
                             58 ;--------------------------------------------------------
                             59 ; code
                             60 ;--------------------------------------------------------
                             61 	.area _CODE_2
                             62 ;StateGame3.c:16: void Start_STATE_GAME3() {
                             63 ;	---------------------------------
                             64 ; Function Start_STATE_GAME3
                             65 ; ---------------------------------
   0000                      66 _Start_STATE_GAME3::
                             67 ;StateGame3.c:18: next_lvl=4;
   0000 21r00r00             68 	ld	hl,#_next_lvl
   0003 36 04                69 	ld	(hl),#0x04
   0005 23                   70 	inc	hl
   0006 36 00                71 	ld	(hl),#0x00
                             72 ;StateGame3.c:19: NR52_REG = 0x80; //Enables sound, you should always setup this first
   0008 21 26 FF             73 	ld	hl,#0xff26
   000B 36 80                74 	ld	(hl),#0x80
                             75 ;StateGame3.c:20: NR51_REG = 0xFF; //Enables all channels (left and right)
   000D 2E 25                76 	ld	l, #0x25
   000F 36 FF                77 	ld	(hl),#0xff
                             78 ;StateGame3.c:21: NR50_REG = 0x77; //Max volume
   0011 2E 24                79 	ld	l, #0x24
   0013 36 77                80 	ld	(hl),#0x77
                             81 ;StateGame3.c:23: SPRITES_8x16;
   0015 11 40 FF             82 	ld	de,#0xff40
   0018 1A                   83 	ld	a,(de)
   0019 4F                   84 	ld	c,a
   001A 06 00                85 	ld	b,#0x00
   001C 79                   86 	ld	a,c
   001D CB D7                87 	set	2, a
   001F 4F                   88 	ld	c,a
   0020 2E 40                89 	ld	l, #0x40
   0022 71                   90 	ld	(hl),c
                             91 ;StateGame3.c:24: for(i = 0; i != n_sprite_types; ++ i) {
   0023 06 00                92 	ld	b,#0x00
   0025                      93 00105$:
   0025 21r00r00             94 	ld	hl,#_n_sprite_types
   0028 7E                   95 	ld	a,(hl)
   0029 90                   96 	sub	a, b
   002A 28 0B                97 	jr	Z,00101$
                             98 ;StateGame3.c:25: SpriteManagerLoad(i);
   002C C5                   99 	push	bc
   002D C5                  100 	push	bc
   002E 33                  101 	inc	sp
   002F CDr00r00            102 	call	_SpriteManagerLoad
   0032 33                  103 	inc	sp
   0033 C1                  104 	pop	bc
                            105 ;StateGame3.c:24: for(i = 0; i != n_sprite_types; ++ i) {
   0034 04                  106 	inc	b
   0035 18 EE               107 	jr	00105$
   0037                     108 00101$:
                            109 ;StateGame3.c:27: SHOW_SPRITES;
   0037 11 40 FF            110 	ld	de,#0xff40
   003A 1A                  111 	ld	a,(de)
   003B 4F                  112 	ld	c,a
   003C 06 00               113 	ld	b,#0x00
   003E 79                  114 	ld	a,c
   003F CB CF               115 	set	1, a
   0041 4F                  116 	ld	c,a
   0042 21 40 FF            117 	ld	hl,#0xff40
   0045 71                  118 	ld	(hl),c
                            119 ;StateGame3.c:29: have_bomb=2;
   0046 21r00r00            120 	ld	hl,#_have_bomb
   0049 36 02               121 	ld	(hl),#0x02
   004B 23                  122 	inc	hl
   004C 36 00               123 	ld	(hl),#0x00
                            124 ;StateGame3.c:31: if( have_diamond==0 ){
   004E 21r01r00            125 	ld	hl,#_have_diamond + 1
   0051 3A                  126 	ld	a,(hl-)
   0052 B6                  127 	or	a,(hl)
   0053 C2r16r01            128 	jp	NZ,00103$
                            129 ;StateGame3.c:32: scroll_target = SpriteManagerAdd(SPRITE_PLAYER, 24, 24);
   0056 21 18 00            130 	ld	hl,#0x0018
   0059 E5                  131 	push	hl
   005A 2E 18               132 	ld	l, #0x18
   005C E5                  133 	push	hl
   005D AF                  134 	xor	a, a
   005E F5                  135 	push	af
   005F 33                  136 	inc	sp
   0060 CDr00r00            137 	call	_SpriteManagerAdd
   0063 E8 05               138 	add	sp, #5
   0065 21r00r00            139 	ld	hl,#_scroll_target
   0068 73                  140 	ld	(hl),e
   0069 23                  141 	inc	hl
   006A 72                  142 	ld	(hl),d
                            143 ;StateGame3.c:33: door_x = 104;
   006B 21r00r00            144 	ld	hl,#_door_x
   006E 36 68               145 	ld	(hl),#0x68
   0070 23                  146 	inc	hl
   0071 36 00               147 	ld	(hl),#0x00
                            148 ;StateGame3.c:34: door_y = 344;
   0073 21r00r00            149 	ld	hl,#_door_y
   0076 36 58               150 	ld	(hl),#0x58
   0078 23                  151 	inc	hl
   0079 36 01               152 	ld	(hl),#0x01
                            153 ;StateGame3.c:35: SpriteManagerAdd(SPRITE_KEY, 120, 408);
   007B 21 98 01            154 	ld	hl,#0x0198
   007E E5                  155 	push	hl
   007F 21 78 00            156 	ld	hl,#0x0078
   0082 E5                  157 	push	hl
   0083 3E 03               158 	ld	a,#0x03
   0085 F5                  159 	push	af
   0086 33                  160 	inc	sp
   0087 CDr00r00            161 	call	_SpriteManagerAdd
   008A E8 05               162 	add	sp, #5
                            163 ;StateGame3.c:36: SpriteManagerAdd(SPRITE_DOOR, door_x, door_y);
   008C 21r00r00            164 	ld	hl,#_door_y
   008F 2A                  165 	ld	a,(hl+)
   0090 66                  166 	ld	h,(hl)
   0091 6F                  167 	ld	l,a
   0092 E5                  168 	push	hl
   0093 21r00r00            169 	ld	hl,#_door_x
   0096 2A                  170 	ld	a,(hl+)
   0097 66                  171 	ld	h,(hl)
   0098 6F                  172 	ld	l,a
   0099 E5                  173 	push	hl
   009A 3E 04               174 	ld	a,#0x04
   009C F5                  175 	push	af
   009D 33                  176 	inc	sp
   009E CDr00r00            177 	call	_SpriteManagerAdd
   00A1 E8 05               178 	add	sp, #5
                            179 ;StateGame3.c:38: SpriteManagerAdd(SPRITE_ENEMY2, 16, 312 );
   00A3 21 38 01            180 	ld	hl,#0x0138
   00A6 E5                  181 	push	hl
   00A7 21 10 00            182 	ld	hl,#0x0010
   00AA E5                  183 	push	hl
   00AB 3E 02               184 	ld	a,#0x02
   00AD F5                  185 	push	af
   00AE 33                  186 	inc	sp
   00AF CDr00r00            187 	call	_SpriteManagerAdd
   00B2 E8 05               188 	add	sp, #5
                            189 ;StateGame3.c:39: SpriteManagerAdd(SPRITE_ENEMY2, 16, 88 );
   00B4 21 58 00            190 	ld	hl,#0x0058
   00B7 E5                  191 	push	hl
   00B8 2E 10               192 	ld	l, #0x10
   00BA E5                  193 	push	hl
   00BB 3E 02               194 	ld	a,#0x02
   00BD F5                  195 	push	af
   00BE 33                  196 	inc	sp
   00BF CDr00r00            197 	call	_SpriteManagerAdd
   00C2 E8 05               198 	add	sp, #5
                            199 ;StateGame3.c:40: SpriteManagerAdd(SPRITE_ENEMY2, 32, 408 );
   00C4 21 98 01            200 	ld	hl,#0x0198
   00C7 E5                  201 	push	hl
   00C8 21 20 00            202 	ld	hl,#0x0020
   00CB E5                  203 	push	hl
   00CC 3E 02               204 	ld	a,#0x02
   00CE F5                  205 	push	af
   00CF 33                  206 	inc	sp
   00D0 CDr00r00            207 	call	_SpriteManagerAdd
   00D3 E8 05               208 	add	sp, #5
                            209 ;StateGame3.c:42: SpriteManagerAdd(SPRITE_ENEMY, 120, 24);
   00D5 21 18 00            210 	ld	hl,#0x0018
   00D8 E5                  211 	push	hl
   00D9 2E 78               212 	ld	l, #0x78
   00DB E5                  213 	push	hl
   00DC 3E 01               214 	ld	a,#0x01
   00DE F5                  215 	push	af
   00DF 33                  216 	inc	sp
   00E0 CDr00r00            217 	call	_SpriteManagerAdd
   00E3 E8 05               218 	add	sp, #5
                            219 ;StateGame3.c:43: SpriteManagerAdd(SPRITE_ENEMY, 120, 216);
   00E5 21 D8 00            220 	ld	hl,#0x00d8
   00E8 E5                  221 	push	hl
   00E9 2E 78               222 	ld	l, #0x78
   00EB E5                  223 	push	hl
   00EC 3E 01               224 	ld	a,#0x01
   00EE F5                  225 	push	af
   00EF 33                  226 	inc	sp
   00F0 CDr00r00            227 	call	_SpriteManagerAdd
   00F3 E8 05               228 	add	sp, #5
                            229 ;StateGame3.c:44: SpriteManagerAdd(SPRITE_ENEMY, 32, 400);
   00F5 21 90 01            230 	ld	hl,#0x0190
   00F8 E5                  231 	push	hl
   00F9 21 20 00            232 	ld	hl,#0x0020
   00FC E5                  233 	push	hl
   00FD 3E 01               234 	ld	a,#0x01
   00FF F5                  235 	push	af
   0100 33                  236 	inc	sp
   0101 CDr00r00            237 	call	_SpriteManagerAdd
   0104 E8 05               238 	add	sp, #5
                            239 ;StateGame3.c:45: SpriteManagerAdd(SPRITE_ENEMY3, 30, 60);
   0106 21 3C 00            240 	ld	hl,#0x003c
   0109 E5                  241 	push	hl
   010A 2E 1E               242 	ld	l, #0x1e
   010C E5                  243 	push	hl
   010D 3E 08               244 	ld	a,#0x08
   010F F5                  245 	push	af
   0110 33                  246 	inc	sp
   0111 CDr00r00            247 	call	_SpriteManagerAdd
   0114 E8 05               248 	add	sp, #5
   0116                     249 00103$:
                            250 ;StateGame3.c:60: InitScrollTiles(0, 59, tiles, 3);
   0116 21 00 00            251 	ld	hl,#0x0000
   0119 E5                  252 	push	hl
   011A 3E 03               253 	ld	a,#0x03
   011C F5                  254 	push	af
   011D 33                  255 	inc	sp
   011E 21r00r00            256 	ld	hl,#_tiles
   0121 E5                  257 	push	hl
   0122 21 00 3B            258 	ld	hl,#0x3b00
   0125 E5                  259 	push	hl
   0126 CDr00r00            260 	call	_ZInitScrollTilesColor
   0129 E8 07               261 	add	sp, #7
                            262 ;StateGame3.c:61: InitScroll(map3Width, map3Height, map3, collilision_tiles3, 0, 3);
   012B 21 00 00            263 	ld	hl,#0x0000
   012E E5                  264 	push	hl
   012F 3E 03               265 	ld	a,#0x03
   0131 F5                  266 	push	af
   0132 33                  267 	inc	sp
   0133 2E 00               268 	ld	l, #0x00
   0135 E5                  269 	push	hl
   0136 21r01r00            270 	ld	hl,#_collilision_tiles3
   0139 E5                  271 	push	hl
   013A 21r00r00            272 	ld	hl,#_map3
   013D E5                  273 	push	hl
   013E 21 38 00            274 	ld	hl,#0x0038
   0141 E5                  275 	push	hl
   0142 2E 14               276 	ld	l, #0x14
   0144 E5                  277 	push	hl
   0145 CDr00r00            278 	call	_InitScrollColor
   0148 E8 0D               279 	add	sp, #13
                            280 ;StateGame3.c:62: SHOW_BKG;
   014A 11 40 FF            281 	ld	de,#0xff40
   014D 1A                  282 	ld	a,(de)
   014E 4F                  283 	ld	c,a
   014F 06 00               284 	ld	b,#0x00
   0151 79                  285 	ld	a,c
   0152 CB C7               286 	set	0, a
   0154 4F                  287 	ld	c,a
   0155 21 40 FF            288 	ld	hl,#0xff40
   0158 71                  289 	ld	(hl),c
   0159 C9                  290 	ret
                            291 ;StateGame3.c:67: void Update_STATE_GAME3() {
                            292 ;	---------------------------------
                            293 ; Function Update_STATE_GAME3
                            294 ; ---------------------------------
   015A                     295 _Update_STATE_GAME3::
                            296 ;StateGame3.c:68: if (KEY_PRESSED(J_START)) {
   015A 21r00r00            297 	ld	hl,#_keys
   015D 4E                  298 	ld	c,(hl)
   015E 06 00               299 	ld	b,#0x00
   0160 CB 79               300 	bit	7, c
   0162 C8                  301 	ret	Z
                            302 ;StateGame3.c:69: SetState(STATE_GAME4);
   0163 3E 04               303 	ld	a,#0x04
   0165 F5                  304 	push	af
   0166 33                  305 	inc	sp
   0167 CDr00r00            306 	call	_SetState
   016A 33                  307 	inc	sp
   016B C9                  308 	ret
                            309 	.area _CODE_2
                            310 	.area _CABS (ABS)
