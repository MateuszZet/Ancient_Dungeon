                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.6.0 #9615 (MINGW64)
                              4 ;--------------------------------------------------------
                              5 	.module StateGame2
                              6 	.optsdcc -mgbz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _Update_STATE_GAME2
                             12 	.globl _Start_STATE_GAME2
                             13 	.globl _SpriteManagerAdd
                             14 	.globl _SpriteManagerLoad
                             15 	.globl _InitScrollColor
                             16 	.globl _ZInitScrollTilesColor
                             17 	.globl _collilision_tiles2
                             18 	.globl _bank_STATE_GAME2
                             19 ;--------------------------------------------------------
                             20 ; ram data
                             21 ;--------------------------------------------------------
                             22 	.area _DATA
   0000                      23 _bank_STATE_GAME2::
   0000                      24 	.ds 1
   0001                      25 _collilision_tiles2::
   0001                      26 	.ds 5
                             27 ;--------------------------------------------------------
                             28 ; absolute external ram data
                             29 ;--------------------------------------------------------
                             30 	.area _DABS (ABS)
                             31 ;--------------------------------------------------------
                             32 ; global & static initialisations
                             33 ;--------------------------------------------------------
                             34 	.area _HOME
                             35 	.area _GSINIT
                             36 	.area _GSFINAL
                             37 	.area _GSINIT
                             38 ;StateGame2.c:3: UINT8 bank_STATE_GAME2 = 2;
   0000 21r00r00             39 	ld	hl,#_bank_STATE_GAME2
   0003 36 02                40 	ld	(hl),#0x02
                             41 ;StateGame2.c:15: UINT8 collilision_tiles2[] = { 1,2,3,4,0 };
   0005 21r01r00             42 	ld	hl,#_collilision_tiles2
   0008 36 01                43 	ld	(hl),#0x01
   000A 21r02r00             44 	ld	hl,#(_collilision_tiles2 + 0x0001)
   000D 36 02                45 	ld	(hl),#0x02
   000F 21r03r00             46 	ld	hl,#(_collilision_tiles2 + 0x0002)
   0012 36 03                47 	ld	(hl),#0x03
   0014 21r04r00             48 	ld	hl,#(_collilision_tiles2 + 0x0003)
   0017 36 04                49 	ld	(hl),#0x04
   0019 21r05r00             50 	ld	hl,#(_collilision_tiles2 + 0x0004)
   001C 36 00                51 	ld	(hl),#0x00
                             52 ;--------------------------------------------------------
                             53 ; Home
                             54 ;--------------------------------------------------------
                             55 	.area _HOME
                             56 	.area _HOME
                             57 ;--------------------------------------------------------
                             58 ; code
                             59 ;--------------------------------------------------------
                             60 	.area _CODE_2
                             61 ;StateGame2.c:17: void Start_STATE_GAME2() {
                             62 ;	---------------------------------
                             63 ; Function Start_STATE_GAME2
                             64 ; ---------------------------------
   0000                      65 _Start_STATE_GAME2::
                             66 ;StateGame2.c:19: next_lvl=3;
   0000 21r00r00             67 	ld	hl,#_next_lvl
   0003 36 03                68 	ld	(hl),#0x03
   0005 23                   69 	inc	hl
   0006 36 00                70 	ld	(hl),#0x00
                             71 ;StateGame2.c:20: NR52_REG = 0x80; //Enables sound, you should always setup this first
   0008 21 26 FF             72 	ld	hl,#0xff26
   000B 36 80                73 	ld	(hl),#0x80
                             74 ;StateGame2.c:21: NR51_REG = 0xFF; //Enables all channels (left and right)
   000D 2E 25                75 	ld	l, #0x25
   000F 36 FF                76 	ld	(hl),#0xff
                             77 ;StateGame2.c:22: NR50_REG = 0x77; //Max volume
   0011 2E 24                78 	ld	l, #0x24
   0013 36 77                79 	ld	(hl),#0x77
                             80 ;StateGame2.c:24: SPRITES_8x16;
   0015 11 40 FF             81 	ld	de,#0xff40
   0018 1A                   82 	ld	a,(de)
   0019 4F                   83 	ld	c,a
   001A 06 00                84 	ld	b,#0x00
   001C 79                   85 	ld	a,c
   001D CB D7                86 	set	2, a
   001F 4F                   87 	ld	c,a
   0020 2E 40                88 	ld	l, #0x40
   0022 71                   89 	ld	(hl),c
                             90 ;StateGame2.c:25: for(i = 0; i != n_sprite_types; ++ i) {
   0023 06 00                91 	ld	b,#0x00
   0025                      92 00103$:
   0025 21r00r00             93 	ld	hl,#_n_sprite_types
   0028 7E                   94 	ld	a,(hl)
   0029 90                   95 	sub	a, b
   002A 28 0B                96 	jr	Z,00101$
                             97 ;StateGame2.c:26: SpriteManagerLoad(i);
   002C C5                   98 	push	bc
   002D C5                   99 	push	bc
   002E 33                  100 	inc	sp
   002F CDr00r00            101 	call	_SpriteManagerLoad
   0032 33                  102 	inc	sp
   0033 C1                  103 	pop	bc
                            104 ;StateGame2.c:25: for(i = 0; i != n_sprite_types; ++ i) {
   0034 04                  105 	inc	b
   0035 18 EE               106 	jr	00103$
   0037                     107 00101$:
                            108 ;StateGame2.c:28: SHOW_SPRITES;
   0037 11 40 FF            109 	ld	de,#0xff40
   003A 1A                  110 	ld	a,(de)
   003B 4F                  111 	ld	c,a
   003C 06 00               112 	ld	b,#0x00
   003E 79                  113 	ld	a,c
   003F CB CF               114 	set	1, a
   0041 4F                  115 	ld	c,a
   0042 21 40 FF            116 	ld	hl,#0xff40
   0045 71                  117 	ld	(hl),c
                            118 ;StateGame2.c:30: scroll_target = SpriteManagerAdd(SPRITE_PLAYER, 20, 100);
   0046 21 64 00            119 	ld	hl,#0x0064
   0049 E5                  120 	push	hl
   004A 2E 14               121 	ld	l, #0x14
   004C E5                  122 	push	hl
   004D AF                  123 	xor	a, a
   004E F5                  124 	push	af
   004F 33                  125 	inc	sp
   0050 CDr00r00            126 	call	_SpriteManagerAdd
   0053 E8 05               127 	add	sp, #5
   0055 21r00r00            128 	ld	hl,#_scroll_target
   0058 73                  129 	ld	(hl),e
   0059 23                  130 	inc	hl
   005A 72                  131 	ld	(hl),d
                            132 ;StateGame2.c:32: door_x = 16;
   005B 21r00r00            133 	ld	hl,#_door_x
   005E 36 10               134 	ld	(hl),#0x10
   0060 23                  135 	inc	hl
   0061 36 00               136 	ld	(hl),#0x00
                            137 ;StateGame2.c:33: door_y = 24;
   0063 21r00r00            138 	ld	hl,#_door_y
   0066 36 18               139 	ld	(hl),#0x18
   0068 23                  140 	inc	hl
   0069 36 00               141 	ld	(hl),#0x00
                            142 ;StateGame2.c:34: SpriteManagerAdd(SPRITE_KEY, 168, 88);
   006B 21 58 00            143 	ld	hl,#0x0058
   006E E5                  144 	push	hl
   006F 2E A8               145 	ld	l, #0xa8
   0071 E5                  146 	push	hl
   0072 3E 03               147 	ld	a,#0x03
   0074 F5                  148 	push	af
   0075 33                  149 	inc	sp
   0076 CDr00r00            150 	call	_SpriteManagerAdd
   0079 E8 05               151 	add	sp, #5
                            152 ;StateGame2.c:35: SpriteManagerAdd(SPRITE_DOOR, door_x, door_y);
   007B 21r00r00            153 	ld	hl,#_door_y
   007E 2A                  154 	ld	a,(hl+)
   007F 66                  155 	ld	h,(hl)
   0080 6F                  156 	ld	l,a
   0081 E5                  157 	push	hl
   0082 21r00r00            158 	ld	hl,#_door_x
   0085 2A                  159 	ld	a,(hl+)
   0086 66                  160 	ld	h,(hl)
   0087 6F                  161 	ld	l,a
   0088 E5                  162 	push	hl
   0089 3E 04               163 	ld	a,#0x04
   008B F5                  164 	push	af
   008C 33                  165 	inc	sp
   008D CDr00r00            166 	call	_SpriteManagerAdd
   0090 E8 05               167 	add	sp, #5
                            168 ;StateGame2.c:36: SpriteManagerAdd(SPRITE_ENEMY2, 50, 115 );
   0092 21 73 00            169 	ld	hl,#0x0073
   0095 E5                  170 	push	hl
   0096 2E 32               171 	ld	l, #0x32
   0098 E5                  172 	push	hl
   0099 3E 02               173 	ld	a,#0x02
   009B F5                  174 	push	af
   009C 33                  175 	inc	sp
   009D CDr00r00            176 	call	_SpriteManagerAdd
   00A0 E8 05               177 	add	sp, #5
                            178 ;StateGame2.c:37: SpriteManagerAdd(SPRITE_ENEMY2, 24, 64 );
   00A2 21 40 00            179 	ld	hl,#0x0040
   00A5 E5                  180 	push	hl
   00A6 2E 18               181 	ld	l, #0x18
   00A8 E5                  182 	push	hl
   00A9 3E 02               183 	ld	a,#0x02
   00AB F5                  184 	push	af
   00AC 33                  185 	inc	sp
   00AD CDr00r00            186 	call	_SpriteManagerAdd
   00B0 E8 05               187 	add	sp, #5
                            188 ;StateGame2.c:38: InitScrollTiles(0, 59, tiles, 3);
   00B2 21 00 00            189 	ld	hl,#0x0000
   00B5 E5                  190 	push	hl
   00B6 3E 03               191 	ld	a,#0x03
   00B8 F5                  192 	push	af
   00B9 33                  193 	inc	sp
   00BA 21r00r00            194 	ld	hl,#_tiles
   00BD E5                  195 	push	hl
   00BE 21 00 3B            196 	ld	hl,#0x3b00
   00C1 E5                  197 	push	hl
   00C2 CDr00r00            198 	call	_ZInitScrollTilesColor
   00C5 E8 07               199 	add	sp, #7
                            200 ;StateGame2.c:39: InitScroll(map2Width, map2Height, map2, collilision_tiles2, 0, 3);
   00C7 21 00 00            201 	ld	hl,#0x0000
   00CA E5                  202 	push	hl
   00CB 3E 03               203 	ld	a,#0x03
   00CD F5                  204 	push	af
   00CE 33                  205 	inc	sp
   00CF 2E 00               206 	ld	l, #0x00
   00D1 E5                  207 	push	hl
   00D2 21r01r00            208 	ld	hl,#_collilision_tiles2
   00D5 E5                  209 	push	hl
   00D6 21r00r00            210 	ld	hl,#_map2
   00D9 E5                  211 	push	hl
   00DA 21 12 00            212 	ld	hl,#0x0012
   00DD E5                  213 	push	hl
   00DE 2E 28               214 	ld	l, #0x28
   00E0 E5                  215 	push	hl
   00E1 CDr00r00            216 	call	_InitScrollColor
   00E4 E8 0D               217 	add	sp, #13
                            218 ;StateGame2.c:40: SHOW_BKG;
   00E6 11 40 FF            219 	ld	de,#0xff40
   00E9 1A                  220 	ld	a,(de)
   00EA 4F                  221 	ld	c,a
   00EB 06 00               222 	ld	b,#0x00
   00ED 79                  223 	ld	a,c
   00EE CB C7               224 	set	0, a
   00F0 4F                  225 	ld	c,a
   00F1 21 40 FF            226 	ld	hl,#0xff40
   00F4 71                  227 	ld	(hl),c
   00F5 C9                  228 	ret
                            229 ;StateGame2.c:45: void Update_STATE_GAME2() {
                            230 ;	---------------------------------
                            231 ; Function Update_STATE_GAME2
                            232 ; ---------------------------------
   00F6                     233 _Update_STATE_GAME2::
                            234 ;StateGame2.c:46: }
   00F6 C9                  235 	ret
                            236 	.area _CODE_2
                            237 	.area _CABS (ABS)
