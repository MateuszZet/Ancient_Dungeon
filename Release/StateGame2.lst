                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.6.0 #9615 (MINGW64)
                              4 ;--------------------------------------------------------
                              5 	.module StateGame2
                              6 	.optsdcc -mgbz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _Update_STATE_GAME2
                             12 	.globl _Start_STATE_GAME2
                             13 	.globl _SpriteManagerAdd
                             14 	.globl _SpriteManagerLoad
                             15 	.globl _InitScrollColor
                             16 	.globl _ZInitScrollTilesColor
                             17 	.globl _SetState
                             18 	.globl _collilision_tiles2
                             19 	.globl _bank_STATE_GAME2
                             20 ;--------------------------------------------------------
                             21 ; ram data
                             22 ;--------------------------------------------------------
                             23 	.area _DATA
   0000                      24 _bank_STATE_GAME2::
   0000                      25 	.ds 1
   0001                      26 _collilision_tiles2::
   0001                      27 	.ds 5
                             28 ;--------------------------------------------------------
                             29 ; absolute external ram data
                             30 ;--------------------------------------------------------
                             31 	.area _DABS (ABS)
                             32 ;--------------------------------------------------------
                             33 ; global & static initialisations
                             34 ;--------------------------------------------------------
                             35 	.area _HOME
                             36 	.area _GSINIT
                             37 	.area _GSFINAL
                             38 	.area _GSINIT
                             39 ;StateGame2.c:3: UINT8 bank_STATE_GAME2 = 2;
   0000 21r00r00             40 	ld	hl,#_bank_STATE_GAME2
   0003 36 02                41 	ld	(hl),#0x02
                             42 ;StateGame2.c:15: UINT8 collilision_tiles2[] = { 1,2,3,4,0 };
   0005 21r01r00             43 	ld	hl,#_collilision_tiles2
   0008 36 01                44 	ld	(hl),#0x01
   000A 21r02r00             45 	ld	hl,#(_collilision_tiles2 + 0x0001)
   000D 36 02                46 	ld	(hl),#0x02
   000F 21r03r00             47 	ld	hl,#(_collilision_tiles2 + 0x0002)
   0012 36 03                48 	ld	(hl),#0x03
   0014 21r04r00             49 	ld	hl,#(_collilision_tiles2 + 0x0003)
   0017 36 04                50 	ld	(hl),#0x04
   0019 21r05r00             51 	ld	hl,#(_collilision_tiles2 + 0x0004)
   001C 36 00                52 	ld	(hl),#0x00
                             53 ;--------------------------------------------------------
                             54 ; Home
                             55 ;--------------------------------------------------------
                             56 	.area _HOME
                             57 	.area _HOME
                             58 ;--------------------------------------------------------
                             59 ; code
                             60 ;--------------------------------------------------------
                             61 	.area _CODE_2
                             62 ;StateGame2.c:17: void Start_STATE_GAME2() {
                             63 ;	---------------------------------
                             64 ; Function Start_STATE_GAME2
                             65 ; ---------------------------------
   0000                      66 _Start_STATE_GAME2::
                             67 ;StateGame2.c:19: next_lvl=3;
   0000 21r00r00             68 	ld	hl,#_next_lvl
   0003 36 03                69 	ld	(hl),#0x03
   0005 23                   70 	inc	hl
   0006 36 00                71 	ld	(hl),#0x00
                             72 ;StateGame2.c:20: NR52_REG = 0x80; //Enables sound, you should always setup this first
   0008 21 26 FF             73 	ld	hl,#0xff26
   000B 36 80                74 	ld	(hl),#0x80
                             75 ;StateGame2.c:21: NR51_REG = 0xFF; //Enables all channels (left and right)
   000D 2E 25                76 	ld	l, #0x25
   000F 36 FF                77 	ld	(hl),#0xff
                             78 ;StateGame2.c:22: NR50_REG = 0x77; //Max volume
   0011 2E 24                79 	ld	l, #0x24
   0013 36 77                80 	ld	(hl),#0x77
                             81 ;StateGame2.c:24: SPRITES_8x16;
   0015 11 40 FF             82 	ld	de,#0xff40
   0018 1A                   83 	ld	a,(de)
   0019 4F                   84 	ld	c,a
   001A 06 00                85 	ld	b,#0x00
   001C 79                   86 	ld	a,c
   001D CB D7                87 	set	2, a
   001F 4F                   88 	ld	c,a
   0020 2E 40                89 	ld	l, #0x40
   0022 71                   90 	ld	(hl),c
                             91 ;StateGame2.c:25: for(i = 0; i != n_sprite_types; ++ i) {
   0023 06 00                92 	ld	b,#0x00
   0025                      93 00103$:
   0025 21r00r00             94 	ld	hl,#_n_sprite_types
   0028 7E                   95 	ld	a,(hl)
   0029 90                   96 	sub	a, b
   002A 28 0B                97 	jr	Z,00101$
                             98 ;StateGame2.c:26: SpriteManagerLoad(i);
   002C C5                   99 	push	bc
   002D C5                  100 	push	bc
   002E 33                  101 	inc	sp
   002F CDr00r00            102 	call	_SpriteManagerLoad
   0032 33                  103 	inc	sp
   0033 C1                  104 	pop	bc
                            105 ;StateGame2.c:25: for(i = 0; i != n_sprite_types; ++ i) {
   0034 04                  106 	inc	b
   0035 18 EE               107 	jr	00103$
   0037                     108 00101$:
                            109 ;StateGame2.c:28: SHOW_SPRITES;
   0037 11 40 FF            110 	ld	de,#0xff40
   003A 1A                  111 	ld	a,(de)
   003B 4F                  112 	ld	c,a
   003C 06 00               113 	ld	b,#0x00
   003E 79                  114 	ld	a,c
   003F CB CF               115 	set	1, a
   0041 4F                  116 	ld	c,a
   0042 21 40 FF            117 	ld	hl,#0xff40
   0045 71                  118 	ld	(hl),c
                            119 ;StateGame2.c:30: scroll_target = SpriteManagerAdd(SPRITE_PLAYER, 20, 100);
   0046 21 64 00            120 	ld	hl,#0x0064
   0049 E5                  121 	push	hl
   004A 2E 14               122 	ld	l, #0x14
   004C E5                  123 	push	hl
   004D AF                  124 	xor	a, a
   004E F5                  125 	push	af
   004F 33                  126 	inc	sp
   0050 CDr00r00            127 	call	_SpriteManagerAdd
   0053 E8 05               128 	add	sp, #5
   0055 21r00r00            129 	ld	hl,#_scroll_target
   0058 73                  130 	ld	(hl),e
   0059 23                  131 	inc	hl
   005A 72                  132 	ld	(hl),d
                            133 ;StateGame2.c:32: door_x = 16;
   005B 21r00r00            134 	ld	hl,#_door_x
   005E 36 10               135 	ld	(hl),#0x10
   0060 23                  136 	inc	hl
   0061 36 00               137 	ld	(hl),#0x00
                            138 ;StateGame2.c:33: door_y = 24;
   0063 21r00r00            139 	ld	hl,#_door_y
   0066 36 18               140 	ld	(hl),#0x18
   0068 23                  141 	inc	hl
   0069 36 00               142 	ld	(hl),#0x00
                            143 ;StateGame2.c:34: SpriteManagerAdd(SPRITE_KEY, 168, 88);
   006B 21 58 00            144 	ld	hl,#0x0058
   006E E5                  145 	push	hl
   006F 2E A8               146 	ld	l, #0xa8
   0071 E5                  147 	push	hl
   0072 3E 03               148 	ld	a,#0x03
   0074 F5                  149 	push	af
   0075 33                  150 	inc	sp
   0076 CDr00r00            151 	call	_SpriteManagerAdd
   0079 E8 05               152 	add	sp, #5
                            153 ;StateGame2.c:35: SpriteManagerAdd(SPRITE_DOOR, door_x, door_y);
   007B 21r00r00            154 	ld	hl,#_door_y
   007E 2A                  155 	ld	a,(hl+)
   007F 66                  156 	ld	h,(hl)
   0080 6F                  157 	ld	l,a
   0081 E5                  158 	push	hl
   0082 21r00r00            159 	ld	hl,#_door_x
   0085 2A                  160 	ld	a,(hl+)
   0086 66                  161 	ld	h,(hl)
   0087 6F                  162 	ld	l,a
   0088 E5                  163 	push	hl
   0089 3E 04               164 	ld	a,#0x04
   008B F5                  165 	push	af
   008C 33                  166 	inc	sp
   008D CDr00r00            167 	call	_SpriteManagerAdd
   0090 E8 05               168 	add	sp, #5
                            169 ;StateGame2.c:37: SpriteManagerAdd(SPRITE_ENEMY2, 50, 115 );
   0092 21 73 00            170 	ld	hl,#0x0073
   0095 E5                  171 	push	hl
   0096 2E 32               172 	ld	l, #0x32
   0098 E5                  173 	push	hl
   0099 3E 02               174 	ld	a,#0x02
   009B F5                  175 	push	af
   009C 33                  176 	inc	sp
   009D CDr00r00            177 	call	_SpriteManagerAdd
   00A0 E8 05               178 	add	sp, #5
                            179 ;StateGame2.c:38: SpriteManagerAdd(SPRITE_ENEMY2, 24, 64 );
   00A2 21 40 00            180 	ld	hl,#0x0040
   00A5 E5                  181 	push	hl
   00A6 2E 18               182 	ld	l, #0x18
   00A8 E5                  183 	push	hl
   00A9 3E 02               184 	ld	a,#0x02
   00AB F5                  185 	push	af
   00AC 33                  186 	inc	sp
   00AD CDr00r00            187 	call	_SpriteManagerAdd
   00B0 E8 05               188 	add	sp, #5
                            189 ;StateGame2.c:40: SpriteManagerAdd(SPRITE_ENEMY, 88, 104);
   00B2 21 68 00            190 	ld	hl,#0x0068
   00B5 E5                  191 	push	hl
   00B6 2E 58               192 	ld	l, #0x58
   00B8 E5                  193 	push	hl
   00B9 3E 01               194 	ld	a,#0x01
   00BB F5                  195 	push	af
   00BC 33                  196 	inc	sp
   00BD CDr00r00            197 	call	_SpriteManagerAdd
   00C0 E8 05               198 	add	sp, #5
                            199 ;StateGame2.c:41: SpriteManagerAdd(SPRITE_ENEMY, 224, 48);
   00C2 21 30 00            200 	ld	hl,#0x0030
   00C5 E5                  201 	push	hl
   00C6 2E E0               202 	ld	l, #0xe0
   00C8 E5                  203 	push	hl
   00C9 3E 01               204 	ld	a,#0x01
   00CB F5                  205 	push	af
   00CC 33                  206 	inc	sp
   00CD CDr00r00            207 	call	_SpriteManagerAdd
   00D0 E8 05               208 	add	sp, #5
                            209 ;StateGame2.c:42: SpriteManagerAdd(SPRITE_ENEMY, 288, 40);
   00D2 21 28 00            210 	ld	hl,#0x0028
   00D5 E5                  211 	push	hl
   00D6 21 20 01            212 	ld	hl,#0x0120
   00D9 E5                  213 	push	hl
   00DA 3E 01               214 	ld	a,#0x01
   00DC F5                  215 	push	af
   00DD 33                  216 	inc	sp
   00DE CDr00r00            217 	call	_SpriteManagerAdd
   00E1 E8 05               218 	add	sp, #5
                            219 ;StateGame2.c:44: InitScrollTiles(0, 59, tiles, 3);
   00E3 21 00 00            220 	ld	hl,#0x0000
   00E6 E5                  221 	push	hl
   00E7 3E 03               222 	ld	a,#0x03
   00E9 F5                  223 	push	af
   00EA 33                  224 	inc	sp
   00EB 21r00r00            225 	ld	hl,#_tiles
   00EE E5                  226 	push	hl
   00EF 21 00 3B            227 	ld	hl,#0x3b00
   00F2 E5                  228 	push	hl
   00F3 CDr00r00            229 	call	_ZInitScrollTilesColor
   00F6 E8 07               230 	add	sp, #7
                            231 ;StateGame2.c:45: InitScroll(map2Width, map2Height, map2, collilision_tiles2, 0, 3);
   00F8 21 00 00            232 	ld	hl,#0x0000
   00FB E5                  233 	push	hl
   00FC 3E 03               234 	ld	a,#0x03
   00FE F5                  235 	push	af
   00FF 33                  236 	inc	sp
   0100 2E 00               237 	ld	l, #0x00
   0102 E5                  238 	push	hl
   0103 21r01r00            239 	ld	hl,#_collilision_tiles2
   0106 E5                  240 	push	hl
   0107 21r00r00            241 	ld	hl,#_map2
   010A E5                  242 	push	hl
   010B 21 12 00            243 	ld	hl,#0x0012
   010E E5                  244 	push	hl
   010F 2E 28               245 	ld	l, #0x28
   0111 E5                  246 	push	hl
   0112 CDr00r00            247 	call	_InitScrollColor
   0115 E8 0D               248 	add	sp, #13
                            249 ;StateGame2.c:46: SHOW_BKG;
   0117 11 40 FF            250 	ld	de,#0xff40
   011A 1A                  251 	ld	a,(de)
   011B 4F                  252 	ld	c,a
   011C 06 00               253 	ld	b,#0x00
   011E 79                  254 	ld	a,c
   011F CB C7               255 	set	0, a
   0121 4F                  256 	ld	c,a
   0122 21 40 FF            257 	ld	hl,#0xff40
   0125 71                  258 	ld	(hl),c
   0126 C9                  259 	ret
                            260 ;StateGame2.c:51: void Update_STATE_GAME2() {
                            261 ;	---------------------------------
                            262 ; Function Update_STATE_GAME2
                            263 ; ---------------------------------
   0127                     264 _Update_STATE_GAME2::
                            265 ;StateGame2.c:52: if (KEY_PRESSED(J_START)) {
   0127 21r00r00            266 	ld	hl,#_keys
   012A 4E                  267 	ld	c,(hl)
   012B 06 00               268 	ld	b,#0x00
   012D CB 79               269 	bit	7, c
   012F C8                  270 	ret	Z
                            271 ;StateGame2.c:53: SetState(STATE_GAME3);
   0130 3E 03               272 	ld	a,#0x03
   0132 F5                  273 	push	af
   0133 33                  274 	inc	sp
   0134 CDr00r00            275 	call	_SetState
   0137 33                  276 	inc	sp
   0138 C9                  277 	ret
                            278 	.area _CODE_2
                            279 	.area _CABS (ABS)
