                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.6.0 #9615 (MINGW64)
                              4 ;--------------------------------------------------------
                              5 	.module StateEnd
                              6 	.optsdcc -mgbz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _SpriteManagerAdd
                             12 	.globl _SpriteManagerLoad
                             13 	.globl _InitScrollColor
                             14 	.globl _ZInitScrollTilesColor
                             15 	.globl _SetState
                             16 	.globl _collilision_tiles4
                             17 	.globl _bank_STATE_END
                             18 	.globl _Start_STATE_END
                             19 	.globl _Update_STATE_END
                             20 ;--------------------------------------------------------
                             21 ; ram data
                             22 ;--------------------------------------------------------
                             23 	.area _DATA
   0000                      24 _bank_STATE_END::
   0000                      25 	.ds 1
   0001                      26 _collilision_tiles4::
   0001                      27 	.ds 5
                             28 ;--------------------------------------------------------
                             29 ; absolute external ram data
                             30 ;--------------------------------------------------------
                             31 	.area _DABS (ABS)
                             32 ;--------------------------------------------------------
                             33 ; global & static initialisations
                             34 ;--------------------------------------------------------
                             35 	.area _HOME
                             36 	.area _GSINIT
                             37 	.area _GSFINAL
                             38 	.area _GSINIT
                             39 ;StateEnd.c:3: UINT8 bank_STATE_END = 2;
   0000 21r00r00             40 	ld	hl,#_bank_STATE_END
   0003 36 02                41 	ld	(hl),#0x02
                             42 ;StateEnd.c:14: UINT8 collilision_tiles4[] = { 1,2,3,4,0 };
   0005 21r01r00             43 	ld	hl,#_collilision_tiles4
   0008 36 01                44 	ld	(hl),#0x01
   000A 21r02r00             45 	ld	hl,#(_collilision_tiles4 + 0x0001)
   000D 36 02                46 	ld	(hl),#0x02
   000F 21r03r00             47 	ld	hl,#(_collilision_tiles4 + 0x0002)
   0012 36 03                48 	ld	(hl),#0x03
   0014 21r04r00             49 	ld	hl,#(_collilision_tiles4 + 0x0003)
   0017 36 04                50 	ld	(hl),#0x04
   0019 21r05r00             51 	ld	hl,#(_collilision_tiles4 + 0x0004)
   001C 36 00                52 	ld	(hl),#0x00
                             53 ;--------------------------------------------------------
                             54 ; Home
                             55 ;--------------------------------------------------------
                             56 	.area _HOME
                             57 	.area _HOME
                             58 ;--------------------------------------------------------
                             59 ; code
                             60 ;--------------------------------------------------------
                             61 	.area _CODE_2
                             62 ;StateEnd.c:16: void Start_STATE_END() {
                             63 ;	---------------------------------
                             64 ; Function Start_STATE_END
                             65 ; ---------------------------------
   0000                      66 _Start_STATE_END::
                             67 ;StateEnd.c:18: next_lvl =1;
   0000 21r00r00             68 	ld	hl,#_next_lvl
   0003 36 01                69 	ld	(hl),#0x01
   0005 23                   70 	inc	hl
   0006 36 00                71 	ld	(hl),#0x00
                             72 ;StateEnd.c:19: NR52_REG = 0x80; //Enables sound, you should always setup this first
   0008 21 26 FF             73 	ld	hl,#0xff26
   000B 36 80                74 	ld	(hl),#0x80
                             75 ;StateEnd.c:20: NR51_REG = 0xFF; //Enables all channels (left and right)
   000D 2E 25                76 	ld	l, #0x25
   000F 36 FF                77 	ld	(hl),#0xff
                             78 ;StateEnd.c:21: NR50_REG = 0x77; //Max volume
   0011 2E 24                79 	ld	l, #0x24
   0013 36 77                80 	ld	(hl),#0x77
                             81 ;StateEnd.c:23: SPRITES_8x16;
   0015 11 40 FF             82 	ld	de,#0xff40
   0018 1A                   83 	ld	a,(de)
   0019 4F                   84 	ld	c,a
   001A 06 00                85 	ld	b,#0x00
   001C 79                   86 	ld	a,c
   001D CB D7                87 	set	2, a
   001F 4F                   88 	ld	c,a
   0020 2E 40                89 	ld	l, #0x40
   0022 71                   90 	ld	(hl),c
                             91 ;StateEnd.c:24: for(i = 0; i != n_sprite_types; ++ i) {
   0023 06 00                92 	ld	b,#0x00
   0025                      93 00109$:
   0025 21r00r00             94 	ld	hl,#_n_sprite_types
   0028 7E                   95 	ld	a,(hl)
   0029 90                   96 	sub	a, b
   002A 28 0B                97 	jr	Z,00101$
                             98 ;StateEnd.c:25: SpriteManagerLoad(i);
   002C C5                   99 	push	bc
   002D C5                  100 	push	bc
   002E 33                  101 	inc	sp
   002F CDr00r00            102 	call	_SpriteManagerLoad
   0032 33                  103 	inc	sp
   0033 C1                  104 	pop	bc
                            105 ;StateEnd.c:24: for(i = 0; i != n_sprite_types; ++ i) {
   0034 04                  106 	inc	b
   0035 18 EE               107 	jr	00109$
   0037                     108 00101$:
                            109 ;StateEnd.c:27: SHOW_SPRITES;
   0037 11 40 FF            110 	ld	de,#0xff40
   003A 1A                  111 	ld	a,(de)
   003B 4F                  112 	ld	c,a
   003C 06 00               113 	ld	b,#0x00
   003E 79                  114 	ld	a,c
   003F CB CF               115 	set	1, a
   0041 4F                  116 	ld	c,a
   0042 21 40 FF            117 	ld	hl,#0xff40
   0045 71                  118 	ld	(hl),c
                            119 ;StateEnd.c:29: have_bomb=0;
   0046 21r00r00            120 	ld	hl,#_have_bomb
   0049 36 00               121 	ld	(hl),#0x00
   004B 23                  122 	inc	hl
   004C 36 00               123 	ld	(hl),#0x00
                            124 ;StateEnd.c:31: scroll_target = SpriteManagerAdd(SPRITE_PLAYER, 70, 35);
   004E 21 23 00            125 	ld	hl,#0x0023
   0051 E5                  126 	push	hl
   0052 2E 46               127 	ld	l, #0x46
   0054 E5                  128 	push	hl
   0055 AF                  129 	xor	a, a
   0056 F5                  130 	push	af
   0057 33                  131 	inc	sp
   0058 CDr00r00            132 	call	_SpriteManagerAdd
   005B E8 05               133 	add	sp, #5
   005D 21r00r00            134 	ld	hl,#_scroll_target
   0060 73                  135 	ld	(hl),e
   0061 23                  136 	inc	hl
   0062 72                  137 	ld	(hl),d
                            138 ;StateEnd.c:33: if(have_diamond==0){
   0063 21r01r00            139 	ld	hl,#_have_diamond + 1
   0066 3A                  140 	ld	a,(hl-)
   0067 B6                  141 	or	a,(hl)
   0068 20 10               142 	jr	NZ,00103$
                            143 ;StateEnd.c:34: SpriteManagerAdd(SPRITE_DIAMOND, 72, 72);
   006A 21 48 00            144 	ld	hl,#0x0048
   006D E5                  145 	push	hl
   006E 2E 48               146 	ld	l, #0x48
   0070 E5                  147 	push	hl
   0071 3E 09               148 	ld	a,#0x09
   0073 F5                  149 	push	af
   0074 33                  150 	inc	sp
   0075 CDr00r00            151 	call	_SpriteManagerAdd
   0078 E8 05               152 	add	sp, #5
   007A                     153 00103$:
                            154 ;StateEnd.c:37: if(have_diamond==3){
   007A 21r00r00            155 	ld	hl,#_have_diamond
   007D 7E                  156 	ld	a,(hl)
   007E D6 03               157 	sub	a, #0x03
   0080 C2rB8r00            158 	jp	NZ,00105$
   0083 23                  159 	inc	hl
   0084 7E                  160 	ld	a,(hl)
   0085 B7                  161 	or	a, a
   0086 20 30               162 	jr	NZ,00105$
                            163 ;StateEnd.c:38: SpriteManagerAdd(SPRITE_DIAMOND, 72, 72);
   0088 21 48 00            164 	ld	hl,#0x0048
   008B E5                  165 	push	hl
   008C 2E 48               166 	ld	l, #0x48
   008E E5                  167 	push	hl
   008F 3E 09               168 	ld	a,#0x09
   0091 F5                  169 	push	af
   0092 33                  170 	inc	sp
   0093 CDr00r00            171 	call	_SpriteManagerAdd
   0096 E8 05               172 	add	sp, #5
                            173 ;StateEnd.c:39: SpriteManagerAdd(SPRITE_DIAMOND, 128, 112);
   0098 21 70 00            174 	ld	hl,#0x0070
   009B E5                  175 	push	hl
   009C 2E 80               176 	ld	l, #0x80
   009E E5                  177 	push	hl
   009F 3E 09               178 	ld	a,#0x09
   00A1 F5                  179 	push	af
   00A2 33                  180 	inc	sp
   00A3 CDr00r00            181 	call	_SpriteManagerAdd
   00A6 E8 05               182 	add	sp, #5
                            183 ;StateEnd.c:40: SpriteManagerAdd(SPRITE_DIAMOND, 16, 112);
   00A8 21 70 00            184 	ld	hl,#0x0070
   00AB E5                  185 	push	hl
   00AC 2E 10               186 	ld	l, #0x10
   00AE E5                  187 	push	hl
   00AF 3E 09               188 	ld	a,#0x09
   00B1 F5                  189 	push	af
   00B2 33                  190 	inc	sp
   00B3 CDr00r00            191 	call	_SpriteManagerAdd
   00B6 E8 05               192 	add	sp, #5
   00B8                     193 00105$:
                            194 ;StateEnd.c:44: if(have_diamond==10){
   00B8 21r00r00            195 	ld	hl,#_have_diamond
   00BB 7E                  196 	ld	a,(hl)
   00BC D6 0A               197 	sub	a, #0x0a
   00BE C2r17r01            198 	jp	NZ,00107$
   00C1 23                  199 	inc	hl
   00C2 7E                  200 	ld	a,(hl)
   00C3 B7                  201 	or	a, a
   00C4 C2r17r01            202 	jp	NZ,00107$
                            203 ;StateEnd.c:45: SpriteManagerAdd(SPRITE_DIAMOND, 72, 72);
   00C7 21 48 00            204 	ld	hl,#0x0048
   00CA E5                  205 	push	hl
   00CB 2E 48               206 	ld	l, #0x48
   00CD E5                  207 	push	hl
   00CE 3E 09               208 	ld	a,#0x09
   00D0 F5                  209 	push	af
   00D1 33                  210 	inc	sp
   00D2 CDr00r00            211 	call	_SpriteManagerAdd
   00D5 E8 05               212 	add	sp, #5
                            213 ;StateEnd.c:46: SpriteManagerAdd(SPRITE_DIAMOND, 128, 112);
   00D7 21 70 00            214 	ld	hl,#0x0070
   00DA E5                  215 	push	hl
   00DB 2E 80               216 	ld	l, #0x80
   00DD E5                  217 	push	hl
   00DE 3E 09               218 	ld	a,#0x09
   00E0 F5                  219 	push	af
   00E1 33                  220 	inc	sp
   00E2 CDr00r00            221 	call	_SpriteManagerAdd
   00E5 E8 05               222 	add	sp, #5
                            223 ;StateEnd.c:47: SpriteManagerAdd(SPRITE_DIAMOND, 104, 88);
   00E7 21 58 00            224 	ld	hl,#0x0058
   00EA E5                  225 	push	hl
   00EB 2E 68               226 	ld	l, #0x68
   00ED E5                  227 	push	hl
   00EE 3E 09               228 	ld	a,#0x09
   00F0 F5                  229 	push	af
   00F1 33                  230 	inc	sp
   00F2 CDr00r00            231 	call	_SpriteManagerAdd
   00F5 E8 05               232 	add	sp, #5
                            233 ;StateEnd.c:48: SpriteManagerAdd(SPRITE_DIAMOND, 16, 112);
   00F7 21 70 00            234 	ld	hl,#0x0070
   00FA E5                  235 	push	hl
   00FB 2E 10               236 	ld	l, #0x10
   00FD E5                  237 	push	hl
   00FE 3E 09               238 	ld	a,#0x09
   0100 F5                  239 	push	af
   0101 33                  240 	inc	sp
   0102 CDr00r00            241 	call	_SpriteManagerAdd
   0105 E8 05               242 	add	sp, #5
                            243 ;StateEnd.c:49: SpriteManagerAdd(SPRITE_DIAMOND, 40, 88);
   0107 21 58 00            244 	ld	hl,#0x0058
   010A E5                  245 	push	hl
   010B 2E 28               246 	ld	l, #0x28
   010D E5                  247 	push	hl
   010E 3E 09               248 	ld	a,#0x09
   0110 F5                  249 	push	af
   0111 33                  250 	inc	sp
   0112 CDr00r00            251 	call	_SpriteManagerAdd
   0115 E8 05               252 	add	sp, #5
   0117                     253 00107$:
                            254 ;StateEnd.c:52: InitScrollTiles(0, 59, tiles, 3);
   0117 21 00 00            255 	ld	hl,#0x0000
   011A E5                  256 	push	hl
   011B 3E 03               257 	ld	a,#0x03
   011D F5                  258 	push	af
   011E 33                  259 	inc	sp
   011F 21r00r00            260 	ld	hl,#_tiles
   0122 E5                  261 	push	hl
   0123 21 00 3B            262 	ld	hl,#0x3b00
   0126 E5                  263 	push	hl
   0127 CDr00r00            264 	call	_ZInitScrollTilesColor
   012A E8 07               265 	add	sp, #7
                            266 ;StateEnd.c:53: InitScroll(endWidth,endHeight,end, collilision_tiles4, 0, 3);
   012C 21 00 00            267 	ld	hl,#0x0000
   012F E5                  268 	push	hl
   0130 3E 03               269 	ld	a,#0x03
   0132 F5                  270 	push	af
   0133 33                  271 	inc	sp
   0134 2E 00               272 	ld	l, #0x00
   0136 E5                  273 	push	hl
   0137 21r01r00            274 	ld	hl,#_collilision_tiles4
   013A E5                  275 	push	hl
   013B 21r00r00            276 	ld	hl,#_end
   013E E5                  277 	push	hl
   013F 21 12 00            278 	ld	hl,#0x0012
   0142 E5                  279 	push	hl
   0143 2E 14               280 	ld	l, #0x14
   0145 E5                  281 	push	hl
   0146 CDr00r00            282 	call	_InitScrollColor
   0149 E8 0D               283 	add	sp, #13
                            284 ;StateEnd.c:54: SHOW_BKG;
   014B 11 40 FF            285 	ld	de,#0xff40
   014E 1A                  286 	ld	a,(de)
   014F 4F                  287 	ld	c,a
   0150 06 00               288 	ld	b,#0x00
   0152 79                  289 	ld	a,c
   0153 CB C7               290 	set	0, a
   0155 4F                  291 	ld	c,a
   0156 21 40 FF            292 	ld	hl,#0xff40
   0159 71                  293 	ld	(hl),c
   015A C9                  294 	ret
                            295 ;StateEnd.c:59: void Update_STATE_END() {
                            296 ;	---------------------------------
                            297 ; Function Update_STATE_END
                            298 ; ---------------------------------
   015B                     299 _Update_STATE_END::
                            300 ;StateEnd.c:61: if(have_diamond==1 || have_diamond==6 || have_diamond==15
   015B 21r00r00            301 	ld	hl,#_have_diamond
   015E 7E                  302 	ld	a,(hl)
   015F 3D                  303 	dec	a
   0160 20 05               304 	jr	NZ,00115$
   0162 23                  305 	inc	hl
   0163 7E                  306 	ld	a,(hl)
   0164 B7                  307 	or	a, a
   0165 28 18               308 	jr	Z,00101$
   0167                     309 00115$:
   0167 21r00r00            310 	ld	hl,#_have_diamond
   016A 7E                  311 	ld	a,(hl)
   016B D6 06               312 	sub	a, #0x06
   016D 20 05               313 	jr	NZ,00116$
   016F 23                  314 	inc	hl
   0170 7E                  315 	ld	a,(hl)
   0171 B7                  316 	or	a, a
   0172 28 0B               317 	jr	Z,00101$
   0174                     318 00116$:
                            319 ;StateEnd.c:62: ){
   0174 21r00r00            320 	ld	hl,#_have_diamond
   0177 7E                  321 	ld	a,(hl)
   0178 D6 0F               322 	sub	a, #0x0f
   017A C0                  323 	ret	NZ
   017B 23                  324 	inc	hl
   017C 7E                  325 	ld	a,(hl)
   017D B7                  326 	or	a, a
   017E C0                  327 	ret	NZ
   017F                     328 00101$:
                            329 ;StateEnd.c:63: SetState(STATE_MENU);
   017F AF                  330 	xor	a, a
   0180 F5                  331 	push	af
   0181 33                  332 	inc	sp
   0182 CDr00r00            333 	call	_SetState
   0185 33                  334 	inc	sp
   0186 C9                  335 	ret
                            336 	.area _CODE_2
                            337 	.area _CABS (ABS)
