                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.6.0 #9615 (MINGW64)
                              4 ;--------------------------------------------------------
                              5 	.module StateEnd
                              6 	.optsdcc -mgbz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _SpriteManagerAdd
                             12 	.globl _SpriteManagerLoad
                             13 	.globl _InitScrollColor
                             14 	.globl _ZInitScrollTilesColor
                             15 	.globl _SetState
                             16 	.globl _collilision_tiles4
                             17 	.globl _bank_STATE_END
                             18 	.globl _Start_STATE_END
                             19 	.globl _Update_STATE_END
                             20 ;--------------------------------------------------------
                             21 ; ram data
                             22 ;--------------------------------------------------------
                             23 	.area _DATA
   0000                      24 _bank_STATE_END::
   0000                      25 	.ds 1
   0001                      26 _collilision_tiles4::
   0001                      27 	.ds 5
                             28 ;--------------------------------------------------------
                             29 ; absolute external ram data
                             30 ;--------------------------------------------------------
                             31 	.area _DABS (ABS)
                             32 ;--------------------------------------------------------
                             33 ; global & static initialisations
                             34 ;--------------------------------------------------------
                             35 	.area _HOME
                             36 	.area _GSINIT
                             37 	.area _GSFINAL
                             38 	.area _GSINIT
                             39 ;StateEnd.c:3: UINT8 bank_STATE_END = 2;
   0000 21r00r00             40 	ld	hl,#_bank_STATE_END
   0003 36 02                41 	ld	(hl),#0x02
                             42 ;StateEnd.c:14: UINT8 collilision_tiles4[] = { 1,2,3,4,0 };
   0005 21r01r00             43 	ld	hl,#_collilision_tiles4
   0008 36 01                44 	ld	(hl),#0x01
   000A 21r02r00             45 	ld	hl,#(_collilision_tiles4 + 0x0001)
   000D 36 02                46 	ld	(hl),#0x02
   000F 21r03r00             47 	ld	hl,#(_collilision_tiles4 + 0x0002)
   0012 36 03                48 	ld	(hl),#0x03
   0014 21r04r00             49 	ld	hl,#(_collilision_tiles4 + 0x0003)
   0017 36 04                50 	ld	(hl),#0x04
   0019 21r05r00             51 	ld	hl,#(_collilision_tiles4 + 0x0004)
   001C 36 00                52 	ld	(hl),#0x00
                             53 ;--------------------------------------------------------
                             54 ; Home
                             55 ;--------------------------------------------------------
                             56 	.area _HOME
                             57 	.area _HOME
                             58 ;--------------------------------------------------------
                             59 ; code
                             60 ;--------------------------------------------------------
                             61 	.area _CODE_2
                             62 ;StateEnd.c:16: void Start_STATE_END() {
                             63 ;	---------------------------------
                             64 ; Function Start_STATE_END
                             65 ; ---------------------------------
   0000                      66 _Start_STATE_END::
                             67 ;StateEnd.c:18: next_lvl =1;
   0000 21r00r00             68 	ld	hl,#_next_lvl
   0003 36 01                69 	ld	(hl),#0x01
   0005 23                   70 	inc	hl
   0006 36 00                71 	ld	(hl),#0x00
                             72 ;StateEnd.c:19: NR52_REG = 0x80; //Enables sound, you should always setup this first
   0008 21 26 FF             73 	ld	hl,#0xff26
   000B 36 80                74 	ld	(hl),#0x80
                             75 ;StateEnd.c:20: NR51_REG = 0xFF; //Enables all channels (left and right)
   000D 2E 25                76 	ld	l, #0x25
   000F 36 FF                77 	ld	(hl),#0xff
                             78 ;StateEnd.c:21: NR50_REG = 0x77; //Max volume
   0011 2E 24                79 	ld	l, #0x24
   0013 36 77                80 	ld	(hl),#0x77
                             81 ;StateEnd.c:23: SPRITES_8x16;
   0015 11 40 FF             82 	ld	de,#0xff40
   0018 1A                   83 	ld	a,(de)
   0019 4F                   84 	ld	c,a
   001A 06 00                85 	ld	b,#0x00
   001C 79                   86 	ld	a,c
   001D CB D7                87 	set	2, a
   001F 4F                   88 	ld	c,a
   0020 2E 40                89 	ld	l, #0x40
   0022 71                   90 	ld	(hl),c
                             91 ;StateEnd.c:24: for(i = 0; i != n_sprite_types; ++ i) {
   0023 06 00                92 	ld	b,#0x00
   0025                      93 00109$:
   0025 21r00r00             94 	ld	hl,#_n_sprite_types
   0028 7E                   95 	ld	a,(hl)
   0029 90                   96 	sub	a, b
   002A 28 0B                97 	jr	Z,00101$
                             98 ;StateEnd.c:25: SpriteManagerLoad(i);
   002C C5                   99 	push	bc
   002D C5                  100 	push	bc
   002E 33                  101 	inc	sp
   002F CDr00r00            102 	call	_SpriteManagerLoad
   0032 33                  103 	inc	sp
   0033 C1                  104 	pop	bc
                            105 ;StateEnd.c:24: for(i = 0; i != n_sprite_types; ++ i) {
   0034 04                  106 	inc	b
   0035 18 EE               107 	jr	00109$
   0037                     108 00101$:
                            109 ;StateEnd.c:27: SHOW_SPRITES;
   0037 11 40 FF            110 	ld	de,#0xff40
   003A 1A                  111 	ld	a,(de)
   003B 4F                  112 	ld	c,a
   003C 06 00               113 	ld	b,#0x00
   003E 79                  114 	ld	a,c
   003F CB CF               115 	set	1, a
   0041 4F                  116 	ld	c,a
   0042 21 40 FF            117 	ld	hl,#0xff40
   0045 71                  118 	ld	(hl),c
                            119 ;StateEnd.c:29: scroll_target = SpriteManagerAdd(SPRITE_PLAYER, 70, 35);
   0046 21 23 00            120 	ld	hl,#0x0023
   0049 E5                  121 	push	hl
   004A 2E 46               122 	ld	l, #0x46
   004C E5                  123 	push	hl
   004D AF                  124 	xor	a, a
   004E F5                  125 	push	af
   004F 33                  126 	inc	sp
   0050 CDr00r00            127 	call	_SpriteManagerAdd
   0053 E8 05               128 	add	sp, #5
   0055 21r00r00            129 	ld	hl,#_scroll_target
   0058 73                  130 	ld	(hl),e
   0059 23                  131 	inc	hl
   005A 72                  132 	ld	(hl),d
                            133 ;StateEnd.c:31: if(have_diamond==0){
   005B 21r01r00            134 	ld	hl,#_have_diamond + 1
   005E 3A                  135 	ld	a,(hl-)
   005F B6                  136 	or	a,(hl)
   0060 20 10               137 	jr	NZ,00103$
                            138 ;StateEnd.c:32: SpriteManagerAdd(SPRITE_DIAMOND, 72, 72);
   0062 21 48 00            139 	ld	hl,#0x0048
   0065 E5                  140 	push	hl
   0066 2E 48               141 	ld	l, #0x48
   0068 E5                  142 	push	hl
   0069 3E 09               143 	ld	a,#0x09
   006B F5                  144 	push	af
   006C 33                  145 	inc	sp
   006D CDr00r00            146 	call	_SpriteManagerAdd
   0070 E8 05               147 	add	sp, #5
   0072                     148 00103$:
                            149 ;StateEnd.c:35: if(have_diamond==3){
   0072 21r00r00            150 	ld	hl,#_have_diamond
   0075 7E                  151 	ld	a,(hl)
   0076 D6 03               152 	sub	a, #0x03
   0078 C2rB0r00            153 	jp	NZ,00105$
   007B 23                  154 	inc	hl
   007C 7E                  155 	ld	a,(hl)
   007D B7                  156 	or	a, a
   007E 20 30               157 	jr	NZ,00105$
                            158 ;StateEnd.c:38: SpriteManagerAdd(SPRITE_DIAMOND, 72, 72);
   0080 21 48 00            159 	ld	hl,#0x0048
   0083 E5                  160 	push	hl
   0084 2E 48               161 	ld	l, #0x48
   0086 E5                  162 	push	hl
   0087 3E 09               163 	ld	a,#0x09
   0089 F5                  164 	push	af
   008A 33                  165 	inc	sp
   008B CDr00r00            166 	call	_SpriteManagerAdd
   008E E8 05               167 	add	sp, #5
                            168 ;StateEnd.c:40: SpriteManagerAdd(SPRITE_DIAMOND, 128, 112);
   0090 21 70 00            169 	ld	hl,#0x0070
   0093 E5                  170 	push	hl
   0094 2E 80               171 	ld	l, #0x80
   0096 E5                  172 	push	hl
   0097 3E 09               173 	ld	a,#0x09
   0099 F5                  174 	push	af
   009A 33                  175 	inc	sp
   009B CDr00r00            176 	call	_SpriteManagerAdd
   009E E8 05               177 	add	sp, #5
                            178 ;StateEnd.c:44: SpriteManagerAdd(SPRITE_DIAMOND, 16, 112);
   00A0 21 70 00            179 	ld	hl,#0x0070
   00A3 E5                  180 	push	hl
   00A4 2E 10               181 	ld	l, #0x10
   00A6 E5                  182 	push	hl
   00A7 3E 09               183 	ld	a,#0x09
   00A9 F5                  184 	push	af
   00AA 33                  185 	inc	sp
   00AB CDr00r00            186 	call	_SpriteManagerAdd
   00AE E8 05               187 	add	sp, #5
   00B0                     188 00105$:
                            189 ;StateEnd.c:49: if(have_diamond==10){
   00B0 21r00r00            190 	ld	hl,#_have_diamond
   00B3 7E                  191 	ld	a,(hl)
   00B4 D6 0A               192 	sub	a, #0x0a
   00B6 C2r0Fr01            193 	jp	NZ,00107$
   00B9 23                  194 	inc	hl
   00BA 7E                  195 	ld	a,(hl)
   00BB B7                  196 	or	a, a
   00BC C2r0Fr01            197 	jp	NZ,00107$
                            198 ;StateEnd.c:52: SpriteManagerAdd(SPRITE_DIAMOND, 72, 72);
   00BF 21 48 00            199 	ld	hl,#0x0048
   00C2 E5                  200 	push	hl
   00C3 2E 48               201 	ld	l, #0x48
   00C5 E5                  202 	push	hl
   00C6 3E 09               203 	ld	a,#0x09
   00C8 F5                  204 	push	af
   00C9 33                  205 	inc	sp
   00CA CDr00r00            206 	call	_SpriteManagerAdd
   00CD E8 05               207 	add	sp, #5
                            208 ;StateEnd.c:54: SpriteManagerAdd(SPRITE_DIAMOND, 128, 112);
   00CF 21 70 00            209 	ld	hl,#0x0070
   00D2 E5                  210 	push	hl
   00D3 2E 80               211 	ld	l, #0x80
   00D5 E5                  212 	push	hl
   00D6 3E 09               213 	ld	a,#0x09
   00D8 F5                  214 	push	af
   00D9 33                  215 	inc	sp
   00DA CDr00r00            216 	call	_SpriteManagerAdd
   00DD E8 05               217 	add	sp, #5
                            218 ;StateEnd.c:55: SpriteManagerAdd(SPRITE_DIAMOND, 104, 88);
   00DF 21 58 00            219 	ld	hl,#0x0058
   00E2 E5                  220 	push	hl
   00E3 2E 68               221 	ld	l, #0x68
   00E5 E5                  222 	push	hl
   00E6 3E 09               223 	ld	a,#0x09
   00E8 F5                  224 	push	af
   00E9 33                  225 	inc	sp
   00EA CDr00r00            226 	call	_SpriteManagerAdd
   00ED E8 05               227 	add	sp, #5
                            228 ;StateEnd.c:58: SpriteManagerAdd(SPRITE_DIAMOND, 16, 112);
   00EF 21 70 00            229 	ld	hl,#0x0070
   00F2 E5                  230 	push	hl
   00F3 2E 10               231 	ld	l, #0x10
   00F5 E5                  232 	push	hl
   00F6 3E 09               233 	ld	a,#0x09
   00F8 F5                  234 	push	af
   00F9 33                  235 	inc	sp
   00FA CDr00r00            236 	call	_SpriteManagerAdd
   00FD E8 05               237 	add	sp, #5
                            238 ;StateEnd.c:59: SpriteManagerAdd(SPRITE_DIAMOND, 40, 88);
   00FF 21 58 00            239 	ld	hl,#0x0058
   0102 E5                  240 	push	hl
   0103 2E 28               241 	ld	l, #0x28
   0105 E5                  242 	push	hl
   0106 3E 09               243 	ld	a,#0x09
   0108 F5                  244 	push	af
   0109 33                  245 	inc	sp
   010A CDr00r00            246 	call	_SpriteManagerAdd
   010D E8 05               247 	add	sp, #5
   010F                     248 00107$:
                            249 ;StateEnd.c:63: InitScrollTiles(0, 59, tiles, 3);
   010F 21 00 00            250 	ld	hl,#0x0000
   0112 E5                  251 	push	hl
   0113 3E 03               252 	ld	a,#0x03
   0115 F5                  253 	push	af
   0116 33                  254 	inc	sp
   0117 21r00r00            255 	ld	hl,#_tiles
   011A E5                  256 	push	hl
   011B 21 00 3B            257 	ld	hl,#0x3b00
   011E E5                  258 	push	hl
   011F CDr00r00            259 	call	_ZInitScrollTilesColor
   0122 E8 07               260 	add	sp, #7
                            261 ;StateEnd.c:64: InitScroll(endWidth,endHeight,end, collilision_tiles4, 0, 3);
   0124 21 00 00            262 	ld	hl,#0x0000
   0127 E5                  263 	push	hl
   0128 3E 03               264 	ld	a,#0x03
   012A F5                  265 	push	af
   012B 33                  266 	inc	sp
   012C 2E 00               267 	ld	l, #0x00
   012E E5                  268 	push	hl
   012F 21r01r00            269 	ld	hl,#_collilision_tiles4
   0132 E5                  270 	push	hl
   0133 21r00r00            271 	ld	hl,#_end
   0136 E5                  272 	push	hl
   0137 21 12 00            273 	ld	hl,#0x0012
   013A E5                  274 	push	hl
   013B 2E 14               275 	ld	l, #0x14
   013D E5                  276 	push	hl
   013E CDr00r00            277 	call	_InitScrollColor
   0141 E8 0D               278 	add	sp, #13
                            279 ;StateEnd.c:65: SHOW_BKG;
   0143 11 40 FF            280 	ld	de,#0xff40
   0146 1A                  281 	ld	a,(de)
   0147 4F                  282 	ld	c,a
   0148 06 00               283 	ld	b,#0x00
   014A 79                  284 	ld	a,c
   014B CB C7               285 	set	0, a
   014D 4F                  286 	ld	c,a
   014E 21 40 FF            287 	ld	hl,#0xff40
   0151 71                  288 	ld	(hl),c
   0152 C9                  289 	ret
                            290 ;StateEnd.c:70: void Update_STATE_END() {
                            291 ;	---------------------------------
                            292 ; Function Update_STATE_END
                            293 ; ---------------------------------
   0153                     294 _Update_STATE_END::
                            295 ;StateEnd.c:72: if(have_diamond==1 || have_diamond==6 || have_diamond==15
   0153 21r00r00            296 	ld	hl,#_have_diamond
   0156 7E                  297 	ld	a,(hl)
   0157 3D                  298 	dec	a
   0158 20 05               299 	jr	NZ,00115$
   015A 23                  300 	inc	hl
   015B 7E                  301 	ld	a,(hl)
   015C B7                  302 	or	a, a
   015D 28 18               303 	jr	Z,00101$
   015F                     304 00115$:
   015F 21r00r00            305 	ld	hl,#_have_diamond
   0162 7E                  306 	ld	a,(hl)
   0163 D6 06               307 	sub	a, #0x06
   0165 20 05               308 	jr	NZ,00116$
   0167 23                  309 	inc	hl
   0168 7E                  310 	ld	a,(hl)
   0169 B7                  311 	or	a, a
   016A 28 0B               312 	jr	Z,00101$
   016C                     313 00116$:
                            314 ;StateEnd.c:73: ){
   016C 21r00r00            315 	ld	hl,#_have_diamond
   016F 7E                  316 	ld	a,(hl)
   0170 D6 0F               317 	sub	a, #0x0f
   0172 C0                  318 	ret	NZ
   0173 23                  319 	inc	hl
   0174 7E                  320 	ld	a,(hl)
   0175 B7                  321 	or	a, a
   0176 C0                  322 	ret	NZ
   0177                     323 00101$:
                            324 ;StateEnd.c:74: SetState(STATE_MENU);
   0177 AF                  325 	xor	a, a
   0178 F5                  326 	push	af
   0179 33                  327 	inc	sp
   017A CDr00r00            328 	call	_SetState
   017D 33                  329 	inc	sp
   017E C9                  330 	ret
                            331 	.area _CODE_2
                            332 	.area _CABS (ABS)
