                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.6.0 #9615 (MINGW64)
                              4 ;--------------------------------------------------------
                              5 	.module StateMenu
                              6 	.optsdcc -mgbz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _SpriteManagerAdd
                             12 	.globl _SpriteManagerLoad
                             13 	.globl _InitScrollColor
                             14 	.globl _ZInitScrollTilesColor
                             15 	.globl _SetState
                             16 	.globl _collilision_tiles0
                             17 	.globl _bank_STATE_MENU
                             18 	.globl _Start_STATE_MENU
                             19 	.globl _Update_STATE_MENU
                             20 ;--------------------------------------------------------
                             21 ; ram data
                             22 ;--------------------------------------------------------
                             23 	.area _DATA
   0000                      24 _bank_STATE_MENU::
   0000                      25 	.ds 1
   0001                      26 _collilision_tiles0::
   0001                      27 	.ds 5
                             28 ;--------------------------------------------------------
                             29 ; absolute external ram data
                             30 ;--------------------------------------------------------
                             31 	.area _DABS (ABS)
                             32 ;--------------------------------------------------------
                             33 ; global & static initialisations
                             34 ;--------------------------------------------------------
                             35 	.area _HOME
                             36 	.area _GSINIT
                             37 	.area _GSFINAL
                             38 	.area _GSINIT
                             39 ;StateMenu.c:3: UINT8 bank_STATE_MENU = 2;
   0000 21r00r00             40 	ld	hl,#_bank_STATE_MENU
   0003 36 02                41 	ld	(hl),#0x02
                             42 ;StateMenu.c:14: UINT8 collilision_tiles0[] = { 1,2,3,4,0 };
   0005 21r01r00             43 	ld	hl,#_collilision_tiles0
   0008 36 01                44 	ld	(hl),#0x01
   000A 21r02r00             45 	ld	hl,#(_collilision_tiles0 + 0x0001)
   000D 36 02                46 	ld	(hl),#0x02
   000F 21r03r00             47 	ld	hl,#(_collilision_tiles0 + 0x0002)
   0012 36 03                48 	ld	(hl),#0x03
   0014 21r04r00             49 	ld	hl,#(_collilision_tiles0 + 0x0003)
   0017 36 04                50 	ld	(hl),#0x04
   0019 21r05r00             51 	ld	hl,#(_collilision_tiles0 + 0x0004)
   001C 36 00                52 	ld	(hl),#0x00
                             53 ;--------------------------------------------------------
                             54 ; Home
                             55 ;--------------------------------------------------------
                             56 	.area _HOME
                             57 	.area _HOME
                             58 ;--------------------------------------------------------
                             59 ; code
                             60 ;--------------------------------------------------------
                             61 	.area _CODE_2
                             62 ;StateMenu.c:16: void Start_STATE_MENU() {
                             63 ;	---------------------------------
                             64 ; Function Start_STATE_MENU
                             65 ; ---------------------------------
   0000                      66 _Start_STATE_MENU::
                             67 ;StateMenu.c:18: next_lvl =1;
   0000 21r00r00             68 	ld	hl,#_next_lvl
   0003 36 01                69 	ld	(hl),#0x01
   0005 23                   70 	inc	hl
   0006 36 00                71 	ld	(hl),#0x00
                             72 ;StateMenu.c:19: NR52_REG = 0x80; //Enables sound, you should always setup this first
   0008 21 26 FF             73 	ld	hl,#0xff26
   000B 36 80                74 	ld	(hl),#0x80
                             75 ;StateMenu.c:20: NR51_REG = 0xFF; //Enables all channels (left and right)
   000D 2E 25                76 	ld	l, #0x25
   000F 36 FF                77 	ld	(hl),#0xff
                             78 ;StateMenu.c:21: NR50_REG = 0x77; //Max volume
   0011 2E 24                79 	ld	l, #0x24
   0013 36 77                80 	ld	(hl),#0x77
                             81 ;StateMenu.c:23: SPRITES_8x16;
   0015 11 40 FF             82 	ld	de,#0xff40
   0018 1A                   83 	ld	a,(de)
   0019 4F                   84 	ld	c,a
   001A 06 00                85 	ld	b,#0x00
   001C 79                   86 	ld	a,c
   001D CB D7                87 	set	2, a
   001F 4F                   88 	ld	c,a
   0020 2E 40                89 	ld	l, #0x40
   0022 71                   90 	ld	(hl),c
                             91 ;StateMenu.c:24: for(i = 0; i != n_sprite_types; ++ i) {
   0023 06 00                92 	ld	b,#0x00
   0025                      93 00103$:
   0025 21r00r00             94 	ld	hl,#_n_sprite_types
   0028 7E                   95 	ld	a,(hl)
   0029 90                   96 	sub	a, b
   002A 28 0B                97 	jr	Z,00101$
                             98 ;StateMenu.c:25: SpriteManagerLoad(i);
   002C C5                   99 	push	bc
   002D C5                  100 	push	bc
   002E 33                  101 	inc	sp
   002F CDr00r00            102 	call	_SpriteManagerLoad
   0032 33                  103 	inc	sp
   0033 C1                  104 	pop	bc
                            105 ;StateMenu.c:24: for(i = 0; i != n_sprite_types; ++ i) {
   0034 04                  106 	inc	b
   0035 18 EE               107 	jr	00103$
   0037                     108 00101$:
                            109 ;StateMenu.c:27: SHOW_SPRITES;
   0037 11 40 FF            110 	ld	de,#0xff40
   003A 1A                  111 	ld	a,(de)
   003B 4F                  112 	ld	c,a
   003C 06 00               113 	ld	b,#0x00
   003E 79                  114 	ld	a,c
   003F CB CF               115 	set	1, a
   0041 4F                  116 	ld	c,a
   0042 21 40 FF            117 	ld	hl,#0xff40
   0045 71                  118 	ld	(hl),c
                            119 ;StateMenu.c:29: scroll_target = SpriteManagerAdd(SPRITE_PLAYER, 70, 35);
   0046 21 23 00            120 	ld	hl,#0x0023
   0049 E5                  121 	push	hl
   004A 2E 46               122 	ld	l, #0x46
   004C E5                  123 	push	hl
   004D AF                  124 	xor	a, a
   004E F5                  125 	push	af
   004F 33                  126 	inc	sp
   0050 CDr00r00            127 	call	_SpriteManagerAdd
   0053 E8 05               128 	add	sp, #5
   0055 21r00r00            129 	ld	hl,#_scroll_target
   0058 73                  130 	ld	(hl),e
   0059 23                  131 	inc	hl
   005A 72                  132 	ld	(hl),d
                            133 ;StateMenu.c:30: door_x = 20;
   005B 21r00r00            134 	ld	hl,#_door_x
   005E 36 14               135 	ld	(hl),#0x14
   0060 23                  136 	inc	hl
   0061 36 00               137 	ld	(hl),#0x00
                            138 ;StateMenu.c:31: door_y = 120;
   0063 21r00r00            139 	ld	hl,#_door_y
   0066 36 78               140 	ld	(hl),#0x78
   0068 23                  141 	inc	hl
   0069 36 00               142 	ld	(hl),#0x00
                            143 ;StateMenu.c:32: have_bomb = 6;
   006B 21r00r00            144 	ld	hl,#_have_bomb
   006E 36 06               145 	ld	(hl),#0x06
   0070 23                  146 	inc	hl
   0071 36 00               147 	ld	(hl),#0x00
                            148 ;StateMenu.c:33: SpriteManagerAdd(SPRITE_KEY, 20, 20);
   0073 21 14 00            149 	ld	hl,#0x0014
   0076 E5                  150 	push	hl
   0077 2E 14               151 	ld	l, #0x14
   0079 E5                  152 	push	hl
   007A 3E 03               153 	ld	a,#0x03
   007C F5                  154 	push	af
   007D 33                  155 	inc	sp
   007E CDr00r00            156 	call	_SpriteManagerAdd
   0081 E8 05               157 	add	sp, #5
                            158 ;StateMenu.c:34: SpriteManagerAdd(SPRITE_DOOR,door_x, door_y);
   0083 21r00r00            159 	ld	hl,#_door_y
   0086 2A                  160 	ld	a,(hl+)
   0087 66                  161 	ld	h,(hl)
   0088 6F                  162 	ld	l,a
   0089 E5                  163 	push	hl
   008A 21r00r00            164 	ld	hl,#_door_x
   008D 2A                  165 	ld	a,(hl+)
   008E 66                  166 	ld	h,(hl)
   008F 6F                  167 	ld	l,a
   0090 E5                  168 	push	hl
   0091 3E 04               169 	ld	a,#0x04
   0093 F5                  170 	push	af
   0094 33                  171 	inc	sp
   0095 CDr00r00            172 	call	_SpriteManagerAdd
   0098 E8 05               173 	add	sp, #5
                            174 ;StateMenu.c:35: SpriteManagerAdd(SPRITE_ENEMY, 128, 112);
   009A 21 70 00            175 	ld	hl,#0x0070
   009D E5                  176 	push	hl
   009E 2E 80               177 	ld	l, #0x80
   00A0 E5                  178 	push	hl
   00A1 3E 01               179 	ld	a,#0x01
   00A3 F5                  180 	push	af
   00A4 33                  181 	inc	sp
   00A5 CDr00r00            182 	call	_SpriteManagerAdd
   00A8 E8 05               183 	add	sp, #5
                            184 ;StateMenu.c:36: SpriteManagerAdd(SPRITE_ENEMY2, 50, 115 );
   00AA 21 73 00            185 	ld	hl,#0x0073
   00AD E5                  186 	push	hl
   00AE 2E 32               187 	ld	l, #0x32
   00B0 E5                  188 	push	hl
   00B1 3E 02               189 	ld	a,#0x02
   00B3 F5                  190 	push	af
   00B4 33                  191 	inc	sp
   00B5 CDr00r00            192 	call	_SpriteManagerAdd
   00B8 E8 05               193 	add	sp, #5
                            194 ;StateMenu.c:37: SpriteManagerAdd(SPRITE_ENEMY3, 30, 30);
   00BA 21 1E 00            195 	ld	hl,#0x001e
   00BD E5                  196 	push	hl
   00BE 2E 1E               197 	ld	l, #0x1e
   00C0 E5                  198 	push	hl
   00C1 3E 08               199 	ld	a,#0x08
   00C3 F5                  200 	push	af
   00C4 33                  201 	inc	sp
   00C5 CDr00r00            202 	call	_SpriteManagerAdd
   00C8 E8 05               203 	add	sp, #5
                            204 ;StateMenu.c:39: InitScrollTiles(0, 59, tiles, 3);
   00CA 21 00 00            205 	ld	hl,#0x0000
   00CD E5                  206 	push	hl
   00CE 3E 03               207 	ld	a,#0x03
   00D0 F5                  208 	push	af
   00D1 33                  209 	inc	sp
   00D2 21r00r00            210 	ld	hl,#_tiles
   00D5 E5                  211 	push	hl
   00D6 21 00 3B            212 	ld	hl,#0x3b00
   00D9 E5                  213 	push	hl
   00DA CDr00r00            214 	call	_ZInitScrollTilesColor
   00DD E8 07               215 	add	sp, #7
                            216 ;StateMenu.c:40: InitScroll(menuWidth,menuHeight,menu, collilision_tiles0, 0, 3);
   00DF 21 00 00            217 	ld	hl,#0x0000
   00E2 E5                  218 	push	hl
   00E3 3E 03               219 	ld	a,#0x03
   00E5 F5                  220 	push	af
   00E6 33                  221 	inc	sp
   00E7 2E 00               222 	ld	l, #0x00
   00E9 E5                  223 	push	hl
   00EA 21r01r00            224 	ld	hl,#_collilision_tiles0
   00ED E5                  225 	push	hl
   00EE 21r00r00            226 	ld	hl,#_menu
   00F1 E5                  227 	push	hl
   00F2 21 12 00            228 	ld	hl,#0x0012
   00F5 E5                  229 	push	hl
   00F6 2E 14               230 	ld	l, #0x14
   00F8 E5                  231 	push	hl
   00F9 CDr00r00            232 	call	_InitScrollColor
   00FC E8 0D               233 	add	sp, #13
                            234 ;StateMenu.c:41: SHOW_BKG;
   00FE 11 40 FF            235 	ld	de,#0xff40
   0101 1A                  236 	ld	a,(de)
   0102 4F                  237 	ld	c,a
   0103 06 00               238 	ld	b,#0x00
   0105 79                  239 	ld	a,c
   0106 CB C7               240 	set	0, a
   0108 4F                  241 	ld	c,a
   0109 21 40 FF            242 	ld	hl,#0xff40
   010C 71                  243 	ld	(hl),c
   010D C9                  244 	ret
                            245 ;StateMenu.c:46: void Update_STATE_MENU() {
                            246 ;	---------------------------------
                            247 ; Function Update_STATE_MENU
                            248 ; ---------------------------------
   010E                     249 _Update_STATE_MENU::
                            250 ;StateMenu.c:47: if (KEY_PRESSED(J_START)) {
   010E 21r00r00            251 	ld	hl,#_keys
   0111 4E                  252 	ld	c,(hl)
   0112 06 00               253 	ld	b,#0x00
   0114 CB 79               254 	bit	7, c
   0116 C8                  255 	ret	Z
                            256 ;StateMenu.c:48: SetState(STATE_GAME3);
   0117 3E 03               257 	ld	a,#0x03
   0119 F5                  258 	push	af
   011A 33                  259 	inc	sp
   011B CDr00r00            260 	call	_SetState
   011E 33                  261 	inc	sp
   011F C9                  262 	ret
                            263 	.area _CODE_2
                            264 	.area _CABS (ABS)
